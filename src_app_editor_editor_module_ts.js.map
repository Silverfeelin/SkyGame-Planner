{"version":3,"file":"src_app_editor_editor_module_ts.js","mappings":"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","sources":["./src/app/editor/components/dashboard/editor-dashboard.component.ts","./src/app/editor/components/dashboard/editor-dashboard.component.html","./src/app/editor/components/editor-shop/editor-shop.component.ts","./src/app/editor/components/editor-shop/editor-shop.component.html","./src/app/editor/components/editor-traveling-spirit/editor-traveling-spirit.component.ts","./src/app/editor/components/editor-traveling-spirit/editor-traveling-spirit.component.html","./src/app/editor/components/editor-tree/editor-tree.component.ts","./src/app/editor/components/editor-tree/editor-tree.component.html","./src/app/editor/editor-routing.module.ts","./src/app/editor/editor.module.ts","./src/app/services/data-json.service.ts","./node_modules/nanoid/index.browser.js","./node_modules/nanoid/url-alphabet/index.js"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-editor-dashboard',\n  templateUrl: './editor-dashboard.component.html',\n  styleUrls: ['./editor-dashboard.component.less']\n})\nexport class EditorDashboardComponent {\n\n}\n","<a [routerLink]=\"['/editor/ts']\">Create TS</a>\n<a [routerLink]=\"['/editor/tree']\">Create Spirit Tree</a>\n<a [routerLink]=\"['/editor/shop']\">Create Shop</a>\n","import { Component } from '@angular/core';\nimport { nanoid } from 'nanoid';\nimport { IShop } from 'src/app/interfaces/shop.interface';\nimport { DataService } from 'src/app/services/data.service';\n\n@Component({\n  selector: 'app-editor-shop',\n  templateUrl: './editor-shop.component.html',\n  styleUrls: ['./editor-shop.component.less']\n})\nexport class EditorShopComponent {\n  copyShopGuid?: string;\n  copyShop?: IShop;\n  returning = true;\n\n  result?: any;\n\n  constructor(\n    private readonly _dataService: DataService,\n  ) {}\n\n  shopGuidChanged(): void {\n    if (!this.copyShopGuid) { return; }\n    const shop = this._dataService.guidMap.get(this.copyShopGuid) as IShop;\n    if (!shop) { return; }\n    this.copyShop = shop;\n  }\n\n  submit(): void {\n    if (!this.copyShop) { return; }\n    // Copy IAPs\n    const iaps: Array<any> = [];\n    this.copyShop.iaps?.forEach(iap => {\n      iaps.push({\n        guid: nanoid(10),\n        name: iap.name,\n        price: iap.price,\n        returning: this.returning || undefined,\n        c: iap.c,\n        sc: iap.sc,\n        sp: iap.sp,\n        items: iap.items ? [...iap.items.map(i => i.guid)] : undefined\n      });\n    });\n\n    // Copy shop\n    const newShop = {\n      guid: nanoid(10),\n      type: this.copyShop.type,\n      spirit: this.copyShop.spirit?.guid || undefined,\n      iaps: iaps.map(iap => iap.guid)\n    };\n\n    this.result = {\n      shop: newShop,\n      iaps\n    };\n  }\n\n\n  copyToClipboard(type: string): void {\n    let value = this.getForClipboard(type);\n    if (!value) { return; }\n    let json = JSON.stringify(value, undefined, 2);\n    const startI = json.indexOf('{');\n    const endI = json.lastIndexOf('}');\n    json = json.substring(startI, endI + 1) + ',';\n    navigator.clipboard.writeText(json);\n  }\n\n  getForClipboard(type: string): Array<any> {\n    switch (type) {\n      case 'shop': return [this.result.shop];\n      case 'iaps': return this.result.iaps;\n      default: return [];\n    }\n  }\n}\n","<div>\n  Shop to copy: <input type=\"text\" [(ngModel)]=\"copyShopGuid\"  (ngModelChange)=\"shopGuidChanged()\"/><br/>\n  Returning IAPs: <input type=\"checkbox\" [(ngModel)]=\"returning\"/>\n  <button type=\"button\" (click)=\"submit()\">Submit</button>\n</div>\n\n<div *ngIf=\"result\">\n  <button type=\"button\" (click)=\"copyToClipboard('shop')\">\n    Copy Shop\n  </button>\n  <button type=\"button\" (click)=\"copyToClipboard('iaps')\">\n    Copy IAPs\n  </button>\n</div>\n","import { Component } from '@angular/core';\nimport moment from 'moment';\nimport { nanoid } from 'nanoid';\nimport { NodeHelper } from 'src/app/helpers/node-helper';\nimport { IItem, ItemType } from 'src/app/interfaces/item.interface';\nimport { INode } from 'src/app/interfaces/node.interface';\nimport { ISpiritTree } from 'src/app/interfaces/spirit-tree.interface';\nimport { ISpirit, SpiritType } from 'src/app/interfaces/spirit.interface';\nimport { ITravelingSpirit } from 'src/app/interfaces/traveling-spirit.interface';\nimport { DataJsonService } from 'src/app/services/data-json.service';\nimport { DataService } from 'src/app/services/data.service';\n\ninterface IFormNode {\n  nw?: boolean;\n  n?: boolean;\n  ne?: boolean\n\n  item?: string;\n\n  c?: number;\n  h?: number;\n  ac?: number;\n}\n\n@Component({\n  selector: 'app-editor-traveling-spirit',\n  templateUrl: './editor-traveling-spirit.component.html',\n  styleUrls: ['./editor-traveling-spirit.component.less']\n})\nexport class EditorTravelingSpiritComponent {\n  tsCount: number;\n  spiritOptions = new Array<ISpirit>();\n  itemOptions = new Array<IItem>();\n\n  // Input\n  spirit?: string;\n  date?: string;\n\n  formNodes: Array<IFormNode>;\n\n  result?: ITravelingSpirit;\n\n  constructor(\n    private readonly dataService: DataService,\n    private readonly dataJsonService: DataJsonService\n  ) {\n      this.tsCount = dataService.travelingSpiritConfig.items.length;\n      this.spiritOptions = dataService.spiritConfig.items\n        .filter(s => s.type === 'Season')\n        .sort((a, b) => a.name.localeCompare(b.name));\n\n      const lastDate = dataService.travelingSpiritConfig.items.at(-1)?.date as Date;\n      this.date = moment(lastDate).add(2, 'weeks').isoWeekday(4).format('YYYY-MM-DD');\n\n      this.formNodes = [];\n      for (let i = 0; i < 24; i++) { this.formNodes.push({\n        n: !((i+2) % 3)\n      }); }\n  }\n\n  spiritChanged(): void {\n    this.formNodes.forEach(n => n.item = undefined);\n\n    this.itemOptions = [];\n\n    // Find last nodes\n    const lastTs = [...this.dataService.travelingSpiritConfig.items].reverse().find(s => s.spirit.guid === this.spirit);\n    const spiritTree = this.dataService.spiritConfig.items.find(s => s.guid === this.spirit)?.tree;\n\n    let existingNodes: Array<INode> = [];\n\n    if (lastTs) {\n      existingNodes = NodeHelper.all(lastTs.tree.node);\n      this.formNodes = this.nodeToFormNodes(lastTs.tree.node);\n    } else if (spiritTree) {\n      // Filter out season-specifics.\n      existingNodes = NodeHelper.all(spiritTree.node).filter(s => {\n        if (s.item?.name === 'Season Heart') { return false; }\n        return true;\n      });\n    }\n\n    // Add items\n    this.itemOptions.push({ guid: 'DON\\'T PICK', name: '-- SPIRIT ITEMS --', type: ItemType.Special });\n    this.itemOptions.push(...existingNodes.filter(n => n.item).map(n => n.item!));\n\n    // Create new items\n    this.itemOptions.push({ guid: 'DON\\'T PICK', name: '-- NEW ITEMS --', type: ItemType.Special });\n    this.itemOptions.push(this.createWingBuff());\n    this.itemOptions.push(this.createHeart());\n    this.itemOptions.push(this.createBlessing());\n    this.itemOptions.push(this.createBlessing());\n    this.itemOptions.push(this.createBlessing());\n    this.itemOptions.push(this.createBlessing());\n  }\n\n  toggleConnection(node: any, direction: string) {\n    node[direction] = !node[direction];\n  }\n\n  submit(): void {\n    const spirit = this.spiritOptions.find(s => s.guid == this.spirit);\n    const tsVisits = this.dataService.travelingSpiritConfig.items.filter(ts => ts.spirit.guid === this.spirit).length;\n\n    if (!spirit) { alert('No spirit'); return; }\n\n    const baseNode = this.formNodeToNodes();\n    const nodes = NodeHelper.all(baseNode);\n\n    // Create tree\n    const tree: ISpiritTree = {\n      guid: nanoid(10),\n      node: nodes[0]\n    };\n\n    // Create ts\n    const ts: ITravelingSpirit = {\n      guid: nanoid(10),\n      date: new Date(this.date!),\n      endDate: moment(this.date).add(4, 'days').toDate(),\n      spirit,\n      tree,\n      number: this.tsCount + 1,\n      visit: tsVisits + 1\n    };\n\n    console.log('ts generated', ts);\n\n    this.result = ts;\n  }\n\n  copyToClipboard(type: string): void {\n    let value = this.getForClipboard(type);\n    if (!value) { return; }\n    const startI = value.indexOf('{');\n    const endI = value.lastIndexOf('}');\n    value = value.substring(startI, endI + 1) + ',';\n    navigator.clipboard.writeText(value);\n  }\n\n  getForClipboard(type: string): string | undefined {\n    switch (type) {\n      case 'ts':\n        return this.dataJsonService.travelingSpiritsToJson([this.result!]);\n      case 'tree':\n        return this.dataJsonService.spiritTreesToJson([this.result!.tree]);\n      case 'nodes':\n        return this.dataJsonService.nodesToJson(NodeHelper.all(this.result!.tree.node));\n      case 'items': {\n        const nodes = NodeHelper.all(this.result!.tree.node);\n        const newItems = nodes\n          .filter(n => n.item?.guid && !this.dataService.guidMap.has(n.item.guid))\n          .map(n => n.item!);\n        return this.dataJsonService.itemsToJson(newItems);\n      }\n    }\n    return undefined;\n  }\n\n  getNextThursday(): Date {\n    const now = moment();\n\n    now.isoWeekday(4);\n    if (now.isoWeek() % 2 === 0) { now.add(7, 'days'); }\n\n    return now.toDate();\n  }\n\n  nodeToFormNodes(mainNode: INode): Array<IFormNode> {\n    const formNodes = new Array<IFormNode>();\n\n    for (let i = 0; i < 24; i++) {\n      formNodes.push({});\n    }\n\n    const defineNode = (i: number, node: INode) => {\n      formNodes[i] = {\n        item: node.item?.guid,\n        c: node.c,\n        h: node.h,\n        ac: node.ac,\n        n: !!node.n,\n        nw: !!node.nw,\n        ne: !!node.ne\n      };\n\n      if (node.nw) { defineNode(i - 1, node.nw); }\n      if (node.n) { defineNode(i - 3, node.n); }\n      if (node.ne) { defineNode(i + 1, node.ne); }\n    };\n\n    let i = 22;\n    defineNode(i, mainNode);\n\n    return formNodes;\n  }\n\n  formNodeToNodes(node?: INode, i = 22): INode {\n    const formNode = this.formNodes[i];\n    node ??= this.formNodeToNode(formNode)!;\n    if (!formNode) { return node; }\n\n    // Left (north-west)\n    if (formNode.nw) {\n      const j = i - 1;\n      const relativeNode = this.formNodeToNode(this.formNodes[j]);\n      if (relativeNode) {\n        node.nw = relativeNode;\n      }\n      this.formNodeToNodes(relativeNode, j);\n    }\n\n    // Top (north)\n    if (formNode.n) {\n      const j = i - 3;\n      const relativeNode = this.formNodeToNode(this.formNodes[j]);\n      if (relativeNode) {\n        node.n = relativeNode;\n      }\n      this.formNodeToNodes(relativeNode, j);\n    }\n\n    // Right (north-east)\n    if (formNode.ne) {\n      const j = i + 1;\n      const relativeNode = this.formNodeToNode(this.formNodes[j]);\n      if (relativeNode) {\n        node.ne = relativeNode;\n      }\n      this.formNodeToNodes(relativeNode, j);\n    }\n\n    return node;\n  }\n\n  formNodeToNode(formNode: IFormNode): INode | undefined {\n    if (!formNode?.item) { return undefined; }\n\n    return {\n      guid: nanoid(10),\n      item: this.itemOptions.find(i => i.guid === formNode.item),\n      c: formNode.c,\n      h: formNode.h,\n      ac: formNode.ac\n    };\n  }\n\n  createHeart(): IItem {\n    return {\n      guid: nanoid(10),\n      type: ItemType.Special,\n      name: 'Heart',\n      icon: 'https://static.wikia.nocookie.net/sky-children-of-the-light/images/d/d9/Heart.png'\n    }\n  }\n\n  createBlessing(): IItem {\n    return {\n      guid: nanoid(10),\n      type: ItemType.Special,\n      name: 'Blessing',\n      icon: 'https://static.wikia.nocookie.net/sky-children-of-the-light/images/8/8e/5CandlesSpell.png'\n    }\n  }\n\n  createWingBuff(): IItem {\n    return {\n      guid: nanoid(10),\n      type: ItemType.WingBuff,\n      name: 'Wing Buff',\n      icon: 'https://static.wikia.nocookie.net/sky-children-of-the-light/images/3/31/Winglight.png'\n    }\n  }\n}\n","<div>\n  There are currently {{ tsCount }} TS registered. Add #{{ tsCount + 1 }} now.\n</div>\n\n<div>\n  Spirit:\n  <select class=\"mono\" [(ngModel)]=\"spirit\" (ngModelChange)=\"spiritChanged()\">\n    <option *ngFor=\"let option of spiritOptions\" [value]=\"option.guid\">{{ option.name }}</option>\n  </select>\n</div>\n\n<div>\n  Date:\n  <input type=\"date\" [(ngModel)]=\"date\">\n</div>\n\n<div>\n  Nodes<br/>\n\n  <div class=\"grid-container\">\n    <div class=\"grid-item\" *ngFor=\"let node of formNodes; let i = index;\">\n      <div *ngIf=\"i%3===1\"\n        class=\"grid-item-connection grid-item-nw\" [class.green]=\"node.nw\"\n        (click)=\"toggleConnection(node, 'nw')\">NW</div>\n      <div class=\"grid-item-connection grid-item-n\" [class.green]=\"node.n\"\n        (click)=\"toggleConnection(node, 'n')\">N</div>\n      <div *ngIf=\"i%3===1\"\n        class=\"grid-item-connection grid-item-ne\" [class.green]=\"node.ne\"\n        (click)=\"toggleConnection(node, 'ne')\">NE</div>\n\n      <div>\n        Item<br/>\n        <select class=\"mono\" [(ngModel)]=\"node.item\">\n          <option value=\"\"></option>\n          <option *ngFor=\"let option of itemOptions\" [value]=\"option.guid\">\n            {{ option.name }}\n            <span>\n              <ng-container *ngIf=\"option.level\">({{option.level}})</ng-container>\n            </span>\n            <span>({{ option.guid }})</span>\n          </option>\n        </select>\n      </div>\n\n      <div>\n        Cost<br/>\n        C:<input class=\"cost\" type=\"number\" [(ngModel)]=\"node.c\">\n        H:<input class=\"cost\" type=\"number\" [(ngModel)]=\"node.h\">\n        AC:<input class=\"cost\" type=\"number\" [(ngModel)]=\"node.ac\">\n      </div>\n    </div>\n  </div>\n</div>\n\n<button type=\"button\" (click)=\"submit()\">Generate</button>\n\n<div *ngIf=\"result\">\n  <button type=\"button\" (click)=\"copyToClipboard('ts')\">\n    Copy TS\n  </button>\n  <button type=\"button\" (click)=\"copyToClipboard('tree')\">\n    Copy Tree\n  </button>\n  <button type=\"button\" (click)=\"copyToClipboard('nodes')\">\n    Copy Nodes\n  </button>\n  <button type=\"button\" (click)=\"copyToClipboard('items')\">\n    Copy Items\n  </button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport moment from 'moment';\nimport { nanoid } from 'nanoid';\nimport { NodeHelper } from 'src/app/helpers/node-helper';\nimport { IItem, ItemType } from 'src/app/interfaces/item.interface';\nimport { INode } from 'src/app/interfaces/node.interface';\nimport { ISpiritTree } from 'src/app/interfaces/spirit-tree.interface';\nimport { ISpirit, SpiritType } from 'src/app/interfaces/spirit.interface';\nimport { ITravelingSpirit } from 'src/app/interfaces/traveling-spirit.interface';\nimport { DataJsonService } from 'src/app/services/data-json.service';\nimport { DataService } from 'src/app/services/data.service';\n\ninterface IFormNode {\n  nw?: boolean;\n  n?: boolean;\n  ne?: boolean\n\n  item?: string;\n\n  c?: number;\n  h?: number;\n  ac?: number;\n}\n\n@Component({\n  selector: 'app-editor-tree-spirit',\n  templateUrl: './editor-tree.component.html',\n  styleUrls: ['./editor-tree.component.less']\n})\nexport class EditorTreeComponent implements OnInit {\n  itemOptions = new Array<IItem>();\n\n  formNodes: Array<IFormNode>;\n\n  result?: ISpiritTree;\n\n  constructor(\n    private readonly _dataService: DataService,\n    private readonly _dataJsonService: DataJsonService,\n    private readonly _route: ActivatedRoute\n  ) {\n      this.formNodes = [];\n      for (let i = 0; i < 24; i++) { this.formNodes.push({\n        n: !((i+2) % 3)\n      }); }\n  }\n\n  ngOnInit(): void {\n    this.formNodes.forEach(n => n.item = undefined);\n\n    const copyTree = this._route.snapshot.queryParams['copy'];\n    if (copyTree) {\n      const tree = this._dataService.guidMap.get(copyTree) as ISpiritTree;\n      this.formNodes = this.nodeToFormNodes(tree.node);\n    }\n\n    this.itemOptions = [];\n\n    // Add items\n    this.itemOptions.push(...this._dataService.itemConfig.items);\n\n    // Create new items\n    this.itemOptions.push({ guid: 'DON\\'T PICK', name: '-- NEW ITEMS --', type: ItemType.Special });\n    this.itemOptions.push(this.createWingBuff());\n    this.itemOptions.push(this.createHeart());\n    this.itemOptions.push(this.createBlessing());\n    this.itemOptions.push(this.createBlessing());\n    this.itemOptions.push(this.createBlessing());\n    this.itemOptions.push(this.createBlessing());\n  }\n\n  toggleConnection(node: any, direction: string) {\n    node[direction] = !node[direction];\n  }\n\n  itemInputChanged(event: Event, i: number): void {\n    const target = (event.target as HTMLInputElement);\n    const value = target?.value as string;\n    if (!value) { return; }\n    const item = this._dataService.guidMap.get(value) as IItem;\n    if (!item) { return; }\n    target.value = '';\n\n    this.formNodes[i].item = item.guid;\n    target.blur();\n  }\n\n  submit(): void {\n    const baseNode = this.formNodeToNodes();\n    const nodes = NodeHelper.all(baseNode);\n\n    // Create tree\n    const tree: ISpiritTree = {\n      guid: nanoid(10),\n      node: nodes[0]\n    };\n\n    console.log('tree generated', tree);\n\n    this.result = tree;\n  }\n\n  copyToClipboard(type: string): void {\n    let value = this.getForClipboard(type);\n    if (!value) { return; }\n    const startI = value.indexOf('{');\n    const endI = value.lastIndexOf('}');\n    value = value.substring(startI, endI + 1) + ',';\n    navigator.clipboard.writeText(value);\n  }\n\n  getForClipboard(type: string): string | undefined {\n    switch (type) {\n      case 'tree':\n        return this._dataJsonService.spiritTreesToJson([this.result!]);\n      case 'nodes':\n        return this._dataJsonService.nodesToJson(NodeHelper.all(this.result!.node));\n      case 'items': {\n        const nodes = NodeHelper.all(this.result!.node);\n        const newItems = nodes\n          .filter(n => n.item?.guid && !this._dataService.guidMap.has(n.item.guid))\n          .map(n => n.item!);\n        return this._dataJsonService.itemsToJson(newItems);\n      }\n    }\n    return undefined;\n  }\n\n  nodeToFormNodes(mainNode: INode): Array<IFormNode> {\n    const formNodes = new Array<IFormNode>();\n\n    for (let i = 0; i < 24; i++) {\n      formNodes.push({});\n    }\n\n    const defineNode = (i: number, node: INode) => {\n      formNodes[i] = {\n        item: node.item?.guid,\n        c: node.c,\n        h: node.h,\n        ac: node.ac,\n        n: !!node.n,\n        nw: !!node.nw,\n        ne: !!node.ne\n      };\n\n      if (node.nw) { defineNode(i - 1, node.nw); }\n      if (node.n) { defineNode(i - 3, node.n); }\n      if (node.ne) { defineNode(i + 1, node.ne); }\n    };\n\n    let i = 22;\n    defineNode(i, mainNode);\n\n    return formNodes;\n  }\n\n  formNodeToNodes(node?: INode, i = 22): INode {\n    const formNode = this.formNodes[i];\n    node ??= this.formNodeToNode(formNode)!;\n    if (!formNode) { return node; }\n\n    // Left (north-west)\n    if (formNode.nw) {\n      const j = i - 1;\n      const relativeNode = this.formNodeToNode(this.formNodes[j]);\n      if (relativeNode) {\n        node.nw = relativeNode;\n      }\n      this.formNodeToNodes(relativeNode, j);\n    }\n\n    // Top (north)\n    if (formNode.n) {\n      const j = i - 3;\n      const relativeNode = this.formNodeToNode(this.formNodes[j]);\n      if (relativeNode) {\n        node.n = relativeNode;\n      }\n      this.formNodeToNodes(relativeNode, j);\n    }\n\n    // Right (north-east)\n    if (formNode.ne) {\n      const j = i + 1;\n      const relativeNode = this.formNodeToNode(this.formNodes[j]);\n      if (relativeNode) {\n        node.ne = relativeNode;\n      }\n      this.formNodeToNodes(relativeNode, j);\n    }\n\n    return node;\n  }\n\n  formNodeToNode(formNode: IFormNode): INode | undefined {\n    if (!formNode?.item) { return undefined; }\n\n    return {\n      guid: nanoid(10),\n      item: this.itemOptions.find(i => i.guid === formNode.item),\n      c: formNode.c,\n      h: formNode.h,\n      ac: formNode.ac\n    };\n  }\n\n  createHeart(): IItem {\n    return {\n      guid: nanoid(10),\n      type: ItemType.Special,\n      name: 'Heart',\n      icon: 'https://static.wikia.nocookie.net/sky-children-of-the-light/images/d/d9/Heart.png'\n    }\n  }\n\n  createBlessing(): IItem {\n    return {\n      guid: nanoid(10),\n      type: ItemType.Special,\n      name: 'Blessing',\n      icon: 'https://static.wikia.nocookie.net/sky-children-of-the-light/images/8/8e/5CandlesSpell.png'\n    }\n  }\n\n  createWingBuff(): IItem {\n    return {\n      guid: nanoid(10),\n      type: ItemType.WingBuff,\n      name: 'Wing Buff',\n      icon: 'https://static.wikia.nocookie.net/sky-children-of-the-light/images/3/31/Winglight.png'\n    }\n  }\n}\n","<div>\n  Nodes<br/>\n\n  <div class=\"grid-container\">\n    <div class=\"grid-item\" *ngFor=\"let node of formNodes; let i = index;\">\n      <div *ngIf=\"i%3===1\"\n        class=\"grid-item-connection grid-item-nw\" [class.green]=\"node.nw\"\n        (click)=\"toggleConnection(node, 'nw')\">NW</div>\n      <div class=\"grid-item-connection grid-item-n\" [class.green]=\"node.n\"\n        (click)=\"toggleConnection(node, 'n')\">N</div>\n      <div *ngIf=\"i%3===1\"\n        class=\"grid-item-connection grid-item-ne\" [class.green]=\"node.ne\"\n        (click)=\"toggleConnection(node, 'ne')\">NE</div>\n\n      <div>\n        Item<br/><input (input)=\"itemInputChanged($event, i)\">\n        <select class=\"mono\" [(ngModel)]=\"node.item\">\n          <option value=\"\"></option>\n          <option *ngFor=\"let option of itemOptions\" [value]=\"option.guid\">\n            {{ option.name }}\n            <span>\n              <ng-container *ngIf=\"option.level\">({{option.level}})</ng-container>\n            </span>\n            <span>({{ option.guid }})</span>\n          </option>\n        </select>\n      </div>\n\n      <div>\n        Cost<br/>\n        C:<input class=\"cost\" type=\"number\" [(ngModel)]=\"node.c\">\n        H:<input class=\"cost\" type=\"number\" [(ngModel)]=\"node.h\">\n        AC:<input class=\"cost\" type=\"number\" [(ngModel)]=\"node.ac\">\n      </div>\n    </div>\n  </div>\n</div>\n\n<button type=\"button\" (click)=\"submit()\">Generate</button>\n\n<div *ngIf=\"result\">\n  <button type=\"button\" (click)=\"copyToClipboard('tree')\">\n    Copy Tree\n  </button>\n  <button type=\"button\" (click)=\"copyToClipboard('nodes')\">\n    Copy Nodes\n  </button>\n  <button type=\"button\" (click)=\"copyToClipboard('items')\">\n    Copy Items\n  </button>\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { EditorDashboardComponent } from './components/dashboard/editor-dashboard.component';\nimport { EditorTravelingSpiritComponent } from './components/editor-traveling-spirit/editor-traveling-spirit.component';\nimport { EditorTreeComponent } from './components/editor-tree/editor-tree.component';\nimport { EditorShopComponent } from './components/editor-shop/editor-shop.component';\n\nconst routes: Routes = [\n  { path: '', component: EditorDashboardComponent },\n  { path: 'ts', component: EditorTravelingSpiritComponent },\n  { path: 'tree', component: EditorTreeComponent },\n  { path: 'shop', component: EditorShopComponent },\n];\n\n@NgModule({\n  declarations: [],\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class EditorRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { EditorDashboardComponent } from './components/dashboard/editor-dashboard.component';\nimport { EditorRoutingModule } from './editor-routing.module';\nimport { EditorTravelingSpiritComponent } from './components/editor-traveling-spirit/editor-traveling-spirit.component';\nimport { FormsModule } from '@angular/forms';\nimport { EditorTreeComponent } from './components/editor-tree/editor-tree.component';\nimport { EditorShopComponent } from './components/editor-shop/editor-shop.component';\n\n@NgModule({\n  declarations: [\n    EditorDashboardComponent,\n    EditorTravelingSpiritComponent,\n    EditorTreeComponent,\n    EditorShopComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    EditorRoutingModule\n  ]\n})\nexport class EditorModule { }\n","import { Injectable } from '@angular/core';\nimport moment from 'moment';\nimport { IItem } from '../interfaces/item.interface';\nimport { INode } from '../interfaces/node.interface';\nimport { ISpiritTree } from '../interfaces/spirit-tree.interface';\nimport { ITravelingSpirit } from '../interfaces/traveling-spirit.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataJsonService {\n\n  constructor() { }\n\n  travelingSpiritsToJson(ts: Array<ITravelingSpirit>): string {\n    return this.stringify(ts.map(ts => {\n      const date = moment(ts.date);\n      return {\n        guid: ts.guid,\n        date: { day: date.date(), month: date.month() + 1, year: date.year() },\n        spirit: ts.spirit.guid,\n        tree: ts.tree.guid\n      };\n    }));\n  }\n\n  spiritTreesToJson(trees: Array<ISpiritTree>): string {\n    return this.stringify(trees.map(tree => {\n      return {\n        guid: tree.guid,\n        node: tree.node.guid\n      };\n    }));\n  }\n\n  nodesToJson(nodes: Array<INode>): string {\n    return this.stringify(nodes.map(node => {\n      return {\n        guid: node.guid,\n        item: node.item?.guid,\n        c: node.c,\n        h: node.h,\n        sc: node.sc,\n        sh: node.sh,\n        ac: node.ac,\n        nw: node.nw?.guid,\n        n: node.n?.guid,\n        ne: node.ne?.guid\n      };\n    }));\n  }\n\n  itemsToJson(items: Array<IItem>): string {\n    return this.stringify(items.map(item => {\n      return {\n        guid: item.guid,\n        type: item.type,\n        name: item.name,\n        icon: item.icon,\n        level: item.level\n      };\n    }));\n  }\n\n  private stringify(array: Array<unknown>): string {\n    return JSON.stringify(array, undefined, 2);\n  }\n}\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","export const urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\n"],"names":["EditorDashboardComponent","selectors","decls","vars","consts","template","i0","nanoid","EditorShopComponent","constructor","_dataService","shopGuidChanged","copyShopGuid","shop","guidMap","get","copyShop","submit","iaps","forEach","iap","push","guid","name","price","returning","undefined","c","sc","sp","items","map","i","newShop","type","spirit","result","copyToClipboard","value","getForClipboard","json","JSON","stringify","startI","indexOf","endI","lastIndexOf","substring","navigator","clipboard","writeText","ctx","moment","NodeHelper","ItemType","EditorTravelingSpiritComponent","dataService","dataJsonService","Array","tsCount","travelingSpiritConfig","length","spiritOptions","spiritConfig","filter","s","sort","a","b","localeCompare","lastDate","at","date","add","isoWeekday","format","formNodes","n","spiritChanged","item","itemOptions","lastTs","reverse","find","spiritTree","tree","existingNodes","all","node","nodeToFormNodes","Special","createWingBuff","createHeart","createBlessing","toggleConnection","direction","tsVisits","ts","alert","baseNode","formNodeToNodes","nodes","Date","endDate","toDate","number","visit","console","log","travelingSpiritsToJson","spiritTreesToJson","nodesToJson","newItems","has","itemsToJson","getNextThursday","now","isoWeek","mainNode","defineNode","h","ac","nw","ne","formNode","formNodeToNode","j","relativeNode","icon","WingBuff","EditorTreeComponent","_dataJsonService","_route","ngOnInit","copyTree","snapshot","queryParams","itemConfig","itemInputChanged","event","target","blur","RouterModule","routes","path","component","EditorRoutingModule","forChild","imports","exports","CommonModule","FormsModule","EditorModule","declarations","DataJsonService","day","month","year","trees","sh","level","array","factory","providedIn","urlAlphabet","random","bytes","crypto","getRandomValues","Uint8Array","customRandom","alphabet","defaultSize","getRandom","mask","Math","LN2","step","size","id","customAlphabet","reduce","byte","toString","toUpperCase"],"sourceRoot":"webpack:///","x_google_ignoreList":[11,12]}