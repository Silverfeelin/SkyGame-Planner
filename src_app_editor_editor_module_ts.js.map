{"version":3,"file":"src_app_editor_editor_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAOM,MAAOA,wBAAwB;AAAxBA,wBAAwB;mBAAxBA,wBAAwB;AAAA;AAAxBA,wBAAwB;QAAxBA,wBAAwB;EAAAC;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCPrCC,4DAAAA,WAAiC;MAAAA,oDAAAA,gBAAS;MAAAA,0DAAAA,EAAI;MAC9CA,4DAAAA,WAAmC;MAAAA,oDAAAA,yBAAkB;MAAAA,0DAAAA,EAAI;MACzDA,4DAAAA,WAAmC;MAAAA,oDAAAA,kBAAW;MAAAA,0DAAAA,EAAI;;;MAF/CA,wDAAAA,eAAAA,6DAAAA,SAA6B;MAC7BA,uDAAAA,GAA+B;MAA/BA,wDAAAA,eAAAA,6DAAAA,SAA+B;MAC/BA,uDAAAA,GAA+B;MAA/BA,wDAAAA,eAAAA,6DAAAA,SAA+B;;;;;;;;;;;;;;;;;;;;;;;ACDF;;;;;;ICG9BA,4DAAAA,aAA2C;IAAAA,oDAAAA,GAAU;IAAAA,0DAAAA,EAAS;;;;IAAnBA,uDAAAA,GAAU;IAAVA,+DAAAA,WAAU;;;ADKjD,MAAOE,mBAAmB;EALhCC;IAME,SAAI,GAAW,EAAE;IACjB,SAAI,GAAW,EAAE;IACjB,SAAI,GAAW,EAAE;IAEjB,gBAAW,GAAG,CACZ,EAAE,EACF,KAAK,EACL,MAAM,EACN,MAAM,EACN,UAAU,EACV,QAAQ,EACR,MAAM,EACN,YAAY,EACZ,MAAM,EACN,MAAM,EACN,OAAO,EACP,QAAQ,EACR,MAAM,EACN,OAAO,EACP,OAAO,EACP,OAAO,EACP,UAAU,EACV,SAAS,CACV;;EAEDC,QAAQ;IACN,IAAIC,IAAI,GAAG,IAAI,CAACA,IAAI;IACpB,MAAMC,SAAS,GAAGD,IAAI,CAACE,OAAO,CAAC,WAAW,CAAC;IAC3C,IAAID,SAAS,IAAI,CAAC,EAAE;MAAED,IAAI,GAAGA,IAAI,CAACG,SAAS,CAAC,CAAC,EAAEF,SAAS,CAAC;;IAEzD,MAAMG,IAAI,GAAU;MAClBC,IAAI,EAAET,8CAAM,CAAC,EAAE,CAAC;MAChBU,IAAI,EAAE,IAAI,CAACA,IAAI;MACfC,IAAI,EAAE,IAAI,CAACA,IAAgB;MAC3BP;KACD;IAED,IAAIQ,IAAI,GAAGC,IAAI,CAACC,SAAS,CAACN,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;IACxCO,SAAS,CAACC,SAAS,CAACC,SAAS,CAACL,IAAI,GAAG,GAAG,CAAC;EAC3C;;AAxCWX,mBAAmB;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB;QAAnBA,mBAAmB;EAAAP;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCThCC,oDAAAA,aACA;MAAAA,4DAAAA,eAA8E;MAAnBA,wDAAAA;QAAA;MAAA,EAAkB;MAA7EA,0DAAAA,EAA8E;MAC9EA,oDAAAA,eACA;MAAAA,4DAAAA,gBAAgD;MAAnBA,wDAAAA;QAAA;MAAA,EAAkB;MAC7CA,wDAAAA,6DAA8D;MAChEA,0DAAAA,EAAS;MACTA,oDAAAA,eACA;MAAAA,4DAAAA,eAA8E;MAAnBA,wDAAAA;QAAA;MAAA,EAAkB;MAA7EA,0DAAAA,EAA8E;MAE9EA,4DAAAA,gBAAmE;MAArBA,wDAAAA;QAAA,OAASmB,cAAU;MAAA,EAAC;MAACnB,oDAAAA,eAAQ;MAAAA,0DAAAA,EAAS;;;MARzBA,uDAAAA,GAAkB;MAAlBA,wDAAAA,qBAAkB;MAEhDA,uDAAAA,GAAkB;MAAlBA,wDAAAA,qBAAkB;MAClBA,uDAAAA,GAAc;MAAdA,wDAAAA,4BAAc;MAGgBA,uDAAAA,GAAkB;MAAlBA,wDAAAA,qBAAkB;;;;;;;;;;;;;;;;;;;;;;;;ACN7C;;;;;;;;ICKhCA,4DAAAA,UAAoB;IACIA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAASA,yDAAAA,wBAAgB,MAAM,CAAC;IAAA,EAAC;IACrDA,oDAAAA,kBACF;IAAAA,0DAAAA,EAAS;IACTA,4DAAAA,gBAAwD;IAAlCA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAASA,yDAAAA,wBAAgB,MAAM,CAAC;IAAA,EAAC;IACrDA,oDAAAA,kBACF;IAAAA,0DAAAA,EAAS;;;ADFL,MAAOoB,mBAAmB;EAO9BjB,YACmBkB,YAAyB;IAAzB,iBAAY,GAAZA,YAAY;IAL/B,cAAS,GAAG,IAAI;EAMb;EAEHC,eAAe;IACb,IAAI,CAAC,IAAI,CAACC,YAAY,EAAE;MAAE;;IAC1B,MAAMC,IAAI,GAAG,IAAI,CAACH,YAAY,CAACI,OAAO,CAACC,GAAG,CAAC,IAAI,CAACH,YAAY,CAAU;IACtE,IAAI,CAACC,IAAI,EAAE;MAAE;;IACb,IAAI,CAACG,QAAQ,GAAGH,IAAI;EACtB;EAEAI,MAAM;IACJ,IAAI,CAAC,IAAI,CAACD,QAAQ,EAAE;MAAE;;IACtB;IACA,MAAME,IAAI,GAAe,EAAE;IAC3B,IAAI,CAACF,QAAQ,CAACE,IAAI,EAAEC,OAAO,CAACC,GAAG,IAAG;MAChCF,IAAI,CAACG,IAAI,CAAC;QACRtB,IAAI,EAAET,8CAAM,CAAC,EAAE,CAAC;QAChBU,IAAI,EAAEoB,GAAG,CAACpB,IAAI;QACdsB,KAAK,EAAEF,GAAG,CAACE,KAAK;QAChBC,SAAS,EAAE,IAAI,CAACA,SAAS,IAAIC,SAAS;QACtCC,CAAC,EAAEL,GAAG,CAACK,CAAC;QACRC,EAAE,EAAEN,GAAG,CAACM,EAAE;QACVC,EAAE,EAAEP,GAAG,CAACO,EAAE;QACVC,KAAK,EAAER,GAAG,CAACQ,KAAK,GAAG,CAAC,GAAGR,GAAG,CAACQ,KAAK,CAACC,GAAG,CAACC,CAAC,IAAIA,CAAC,CAAC/B,IAAI,CAAC,CAAC,GAAGyB;OACtD,CAAC;IACJ,CAAC,CAAC;IAEF;IACA,MAAMO,OAAO,GAAG;MACdhC,IAAI,EAAET,8CAAM,CAAC,EAAE,CAAC;MAChBW,IAAI,EAAE,IAAI,CAACe,QAAQ,CAACf,IAAI;MACxB+B,MAAM,EAAE,IAAI,CAAChB,QAAQ,CAACgB,MAAM,EAAEjC,IAAI,IAAIyB,SAAS;MAC/CN,IAAI,EAAEA,IAAI,CAACW,GAAG,CAACT,GAAG,IAAIA,GAAG,CAACrB,IAAI;KAC/B;IAED,IAAI,CAACkC,MAAM,GAAG;MACZpB,IAAI,EAAEkB,OAAO;MACbb;KACD;EACH;EAGAgB,eAAe,CAACjC,IAAY;IAC1B,IAAIkC,KAAK,GAAG,IAAI,CAACC,eAAe,CAACnC,IAAI,CAAC;IACtC,IAAI,CAACkC,KAAK,EAAE;MAAE;;IACd,IAAIjC,IAAI,GAAGC,IAAI,CAACC,SAAS,CAAC+B,KAAK,EAAEX,SAAS,EAAE,CAAC,CAAC;IAC9C,MAAMa,MAAM,GAAGnC,IAAI,CAACN,OAAO,CAAC,GAAG,CAAC;IAChC,MAAM0C,IAAI,GAAGpC,IAAI,CAACqC,WAAW,CAAC,GAAG,CAAC;IAClCrC,IAAI,GAAGA,IAAI,CAACL,SAAS,CAACwC,MAAM,EAAEC,IAAI,GAAG,CAAC,CAAC,GAAG,GAAG;IAC7CjC,SAAS,CAACC,SAAS,CAACC,SAAS,CAACL,IAAI,CAAC;EACrC;EAEAkC,eAAe,CAACnC,IAAY;IAC1B,QAAQA,IAAI;MACV,KAAK,MAAM;QAAE,OAAO,CAAC,IAAI,CAACgC,MAAM,CAACpB,IAAI,CAAC;MACtC,KAAK,MAAM;QAAE,OAAO,IAAI,CAACoB,MAAM,CAACf,IAAI;MACpC;QAAS,OAAO,EAAE;IAAC;EAEvB;;AAlEWT,mBAAmB;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB;QAAnBA,mBAAmB;EAAAzB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCVhCC,4DAAAA,UAAK;MACHA,oDAAAA,sBAAc;MAAAA,4DAAAA,eAAoF;MAAjEA,wDAAAA;QAAA;MAAA,EAA0B;QAAA,OAAmBmB,qBAAiB;MAAA,EAApC;MAA7CnB,0DAAAA,EAAoF;MAAAA,uDAAAA,SAAK;MACvGA,oDAAAA,wBAAgB;MAAAA,4DAAAA,eAAgD;MAAzBA,wDAAAA;QAAA;MAAA,EAAuB;MAA9CA,0DAAAA,EAAgD;MAChEA,4DAAAA,gBAAyC;MAAnBA,wDAAAA;QAAA,OAASmB,YAAQ;MAAA,EAAC;MAACnB,oDAAAA,aAAM;MAAAA,0DAAAA,EAAS;MAG1DA,wDAAAA,uDAOM;;;MAZ6BA,uDAAAA,GAA0B;MAA1BA,wDAAAA,6BAA0B;MACpBA,uDAAAA,GAAuB;MAAvBA,wDAAAA,0BAAuB;MAI1DA,uDAAAA,GAAY;MAAZA,wDAAAA,oBAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLU;AACI;AACyB;AACW;;;;;;;;;ICGhEA,4DAAAA,gBAAmE;IAAAA,oDAAAA,GAAiB;IAAAA,0DAAAA,EAAS;;;;IAAhDA,wDAAAA,yBAAqB;IAACA,uDAAAA,GAAiB;IAAjBA,+DAAAA,gBAAiB;;;;;;IAclFA,4DAAAA,cAEyC;IAAvCA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA;MAAA,OAASA,yDAAAA,kCAAuB,IAAI,CAAC;IAAA,EAAC;IAACA,oDAAAA,SAAE;IAAAA,0DAAAA,EAAM;;;;IADLA,yDAAAA,qBAAuB;;;;;;IAInEA,4DAAAA,cAEyC;IAAvCA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA;MAAA,OAASA,yDAAAA,mCAAuB,IAAI,CAAC;IAAA,EAAC;IAACA,oDAAAA,SAAE;IAAAA,0DAAAA,EAAM;;;;IADLA,yDAAAA,qBAAuB;;;;;IAS3DA,qEAAAA,GAAmC;IAAAA,oDAAAA,GAAkB;IAAAA,mEAAAA,EAAe;;;;IAAjCA,uDAAAA,GAAkB;IAAlBA,gEAAAA,4BAAkB;;;;;IAHzDA,4DAAAA,gBAAiE;IAC/DA,oDAAAA,GACA;IAAAA,4DAAAA,WAAM;IACJA,wDAAAA,oGAAoE;IACtEA,0DAAAA,EAAO;IACPA,4DAAAA,WAAM;IAAAA,oDAAAA,GAAmB;IAAAA,0DAAAA,EAAO;;;;IALSA,wDAAAA,0BAAqB;IAC9DA,uDAAAA,GACA;IADAA,gEAAAA,2BACA;IACiBA,uDAAAA,GAAkB;IAAlBA,wDAAAA,0BAAkB;IAE7BA,uDAAAA,GAAmB;IAAnBA,gEAAAA,2BAAmB;;;;;;IAlBjCA,4DAAAA,aAAsE;IACpEA,wDAAAA,yEAEiD;IACjDA,4DAAAA,cACwC;IAAtCA,wDAAAA;MAAA;MAAA;MAAA;MAAA,OAASA,yDAAAA,mCAAuB,GAAG,CAAC;IAAA,EAAC;IAACA,oDAAAA,QAAC;IAAAA,0DAAAA,EAAM;IAC/CA,wDAAAA,0EAEiD;IAEjDA,4DAAAA,UAAK;IACkBA,wDAAAA;MAAA;MAAA;MAAA,OAAaA,yDAAAA,uBACrC;IAAA,EAD+C;IAC1CA,uDAAAA,iBAA0B;IAC1BA,wDAAAA,+EAMS;IACXA,0DAAAA,EAAS;IAGXA,4DAAAA,UAAK;IACHA,uDAAAA,oBAAsC;IACtCA,4DAAAA,iBAAuD;IAArBA,wDAAAA;MAAA;MAAA;MAAA,OAAaA,yDAAAA,oBAClD;IAAA,EADyD;IAAtDA,0DAAAA,EAAuD;IACvDA,uDAAAA,oBAAqC;IACrCA,4DAAAA,iBAAuD;IAArBA,wDAAAA;MAAA;MAAA;MAAA,OAAaA,yDAAAA,oBAClD;IAAA,EADyD;IAAtDA,0DAAAA,EAAuD;IACvDA,uDAAAA,oBAA+C;IAC/CA,4DAAAA,iBAAwD;IAAtBA,wDAAAA;MAAA;MAAA;MAAA,OAAaA,yDAAAA,qBAClD;IAAA,EAD0D;IAAvDA,0DAAAA,EAAwD;;;;;;IA5BpDA,uDAAAA,GAAa;IAAbA,wDAAAA,wBAAa;IAG2BA,uDAAAA,GAAsB;IAAtBA,yDAAAA,oBAAsB;IAE9DA,uDAAAA,GAAa;IAAbA,wDAAAA,wBAAa;IAKIA,uDAAAA,GAAuB;IAAvBA,wDAAAA,yBAAuB;IAEfA,uDAAAA,GAAc;IAAdA,wDAAAA,+BAAc;IAYTA,uDAAAA,GAAoB;IAApBA,wDAAAA,sBAAoB;IAEpBA,uDAAAA,GAAoB;IAApBA,wDAAAA,sBAAoB;IAEpBA,uDAAAA,GAAqB;IAArBA,wDAAAA,uBAAqB;;;;;;IAQ/DA,4DAAAA,UAAoB;IACIA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAASA,yDAAAA,yBAAgB,IAAI,CAAC;IAAA,EAAC;IACnDA,oDAAAA,gBACF;IAAAA,0DAAAA,EAAS;IACTA,4DAAAA,gBAAwD;IAAlCA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAASA,yDAAAA,yBAAgB,MAAM,CAAC;IAAA,EAAC;IACrDA,oDAAAA,kBACF;IAAAA,0DAAAA,EAAS;IACTA,4DAAAA,gBAAyD;IAAnCA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAASA,yDAAAA,yBAAgB,OAAO,CAAC;IAAA,EAAC;IACtDA,oDAAAA,mBACF;IAAAA,0DAAAA,EAAS;IACTA,4DAAAA,gBAAyD;IAAnCA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAASA,yDAAAA,yBAAgB,OAAO,CAAC;IAAA,EAAC;IACtDA,oDAAAA,mBACF;IAAAA,0DAAAA,EAAS;;;ADxCL,MAAOsD,8BAA8B;EAazCnD,YACmBoD,WAAwB,EACxBC,eAAgC;IADhC,gBAAW,GAAXD,WAAW;IACX,oBAAe,GAAfC,eAAe;IAblC,kBAAa,GAAG,IAAIC,KAAK,EAAW;IACpC,gBAAW,GAAG,IAAIA,KAAK,EAAS;IAc5B,IAAI,CAACC,OAAO,GAAGH,WAAW,CAACI,qBAAqB,CAACpB,KAAK,CAACqB,MAAM;IAC7D,IAAI,CAACC,aAAa,GAAGN,WAAW,CAACO,YAAY,CAACvB,KAAK,CAChDwB,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACpD,IAAI,KAAK,QAAQ,CAAC,CAChCqD,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACvD,IAAI,CAACyD,aAAa,CAACD,CAAC,CAACxD,IAAI,CAAC,CAAC;IAE/C,MAAM0D,QAAQ,GAAGd,WAAW,CAACI,qBAAqB,CAACpB,KAAK,CAAC+B,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEC,IAAY;IAC7E,IAAI,CAACA,IAAI,GAAGpB,6CAAM,CAACkB,QAAQ,CAAC,CAACG,GAAG,CAAC,CAAC,EAAE,OAAO,CAAC,CAACC,UAAU,CAAC,CAAC,CAAC,CAACC,MAAM,CAAC,YAAY,CAAC;IAE/E,IAAI,CAACC,SAAS,GAAG,EAAE;IACnB,KAAK,IAAIlC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;MAAE,IAAI,CAACkC,SAAS,CAAC3C,IAAI,CAAC;QACjD4C,CAAC,EAAE,EAAE,CAACnC,CAAC,GAAC,CAAC,IAAI,CAAC;OACf,CAAC;;EACN;EAEAoC,aAAa;IACX,IAAI,CAACF,SAAS,CAAC7C,OAAO,CAAC8C,CAAC,IAAIA,CAAC,CAACnE,IAAI,GAAG0B,SAAS,CAAC;IAE/C,IAAI,CAAC2C,WAAW,GAAG,EAAE;IAErB;IACA,MAAMC,MAAM,GAAG,CAAC,GAAG,IAAI,CAACxB,WAAW,CAACI,qBAAqB,CAACpB,KAAK,CAAC,CAACyC,OAAO,EAAE,CAACC,IAAI,CAACjB,CAAC,IAAIA,CAAC,CAACrB,MAAM,CAACjC,IAAI,KAAK,IAAI,CAACiC,MAAM,CAAC;IACnH,MAAMuC,UAAU,GAAG,IAAI,CAAC3B,WAAW,CAACO,YAAY,CAACvB,KAAK,CAAC0C,IAAI,CAACjB,CAAC,IAAIA,CAAC,CAACtD,IAAI,KAAK,IAAI,CAACiC,MAAM,CAAC,EAAEwC,IAAI;IAE9F,IAAIC,aAAa,GAAiB,EAAE;IAEpC,IAAIL,MAAM,EAAE;MACVK,aAAa,GAAGhC,uEAAc,CAAC2B,MAAM,CAACI,IAAI,CAACG,IAAI,CAAC;MAChD,IAAI,CAACX,SAAS,GAAG,IAAI,CAACY,eAAe,CAACR,MAAM,CAACI,IAAI,CAACG,IAAI,CAAC;KACxD,MAAM,IAAIJ,UAAU,EAAE;MACrB;MACAE,aAAa,GAAGhC,uEAAc,CAAC8B,UAAU,CAACI,IAAI,CAAC,CAACvB,MAAM,CAACC,CAAC,IAAG;QACzD,IAAIA,CAAC,CAACvD,IAAI,EAAEE,IAAI,KAAK,cAAc,EAAE;UAAE,OAAO,KAAK;;QACnD,OAAO,IAAI;MACb,CAAC,CAAC;;IAGJ;IACA,IAAI,CAACmE,WAAW,CAAC9C,IAAI,CAAC;MAAEtB,IAAI,EAAE,aAAa;MAAEC,IAAI,EAAE,oBAAoB;MAAEC,IAAI,EAAEyC,+EAAgBmC;IAAA,CAAE,CAAC;IAClG,IAAI,CAACV,WAAW,CAAC9C,IAAI,CAAC,GAAGoD,aAAa,CAACrB,MAAM,CAACa,CAAC,IAAIA,CAAC,CAACnE,IAAI,CAAC,CAAC+B,GAAG,CAACoC,CAAC,IAAIA,CAAC,CAACnE,IAAK,CAAC,CAAC;IAE7E;IACA,IAAI,CAACqE,WAAW,CAAC9C,IAAI,CAAC;MAAEtB,IAAI,EAAE,aAAa;MAAEC,IAAI,EAAE,iBAAiB;MAAEC,IAAI,EAAEyC,+EAAgBmC;IAAA,CAAE,CAAC;IAC/F,IAAI,CAACV,WAAW,CAAC9C,IAAI,CAAC,IAAI,CAACyD,cAAc,EAAE,CAAC;IAC5C,IAAI,CAACX,WAAW,CAAC9C,IAAI,CAAC,IAAI,CAAC0D,WAAW,EAAE,CAAC;IACzC,IAAI,CAACZ,WAAW,CAAC9C,IAAI,CAAC,IAAI,CAAC2D,cAAc,EAAE,CAAC;IAC5C,IAAI,CAACb,WAAW,CAAC9C,IAAI,CAAC,IAAI,CAAC2D,cAAc,EAAE,CAAC;IAC5C,IAAI,CAACb,WAAW,CAAC9C,IAAI,CAAC,IAAI,CAAC2D,cAAc,EAAE,CAAC;IAC5C,IAAI,CAACb,WAAW,CAAC9C,IAAI,CAAC,IAAI,CAAC2D,cAAc,EAAE,CAAC;EAC9C;EAEAC,gBAAgB,CAACN,IAAS,EAAEO,SAAiB;IAC3CP,IAAI,CAACO,SAAS,CAAC,GAAG,CAACP,IAAI,CAACO,SAAS,CAAC;EACpC;EAEAjE,MAAM;IACJ,MAAMe,MAAM,GAAG,IAAI,CAACkB,aAAa,CAACoB,IAAI,CAACjB,CAAC,IAAIA,CAAC,CAACtD,IAAI,IAAI,IAAI,CAACiC,MAAM,CAAC;IAClE,MAAMmD,QAAQ,GAAG,IAAI,CAACvC,WAAW,CAACI,qBAAqB,CAACpB,KAAK,CAACwB,MAAM,CAACgC,EAAE,IAAIA,EAAE,CAACpD,MAAM,CAACjC,IAAI,KAAK,IAAI,CAACiC,MAAM,CAAC,CAACiB,MAAM;IAEjH,IAAI,CAACjB,MAAM,EAAE;MAAEqD,KAAK,CAAC,WAAW,CAAC;MAAE;;IAEnC,MAAMC,QAAQ,GAAG,IAAI,CAACC,eAAe,EAAE;IACvC,MAAMC,KAAK,GAAG/C,uEAAc,CAAC6C,QAAQ,CAAC;IAEtC;IACA,MAAMd,IAAI,GAAgB;MACxBzE,IAAI,EAAET,8CAAM,CAAC,EAAE,CAAC;MAChBqF,IAAI,EAAEa,KAAK,CAAC,CAAC;KACd;IAED;IACA,MAAMJ,EAAE,GAAqB;MAC3BrF,IAAI,EAAET,8CAAM,CAAC,EAAE,CAAC;MAChBsE,IAAI,EAAE,IAAI6B,IAAI,CAAC,IAAI,CAAC7B,IAAK,CAAC;MAC1B8B,OAAO,EAAElD,6CAAM,CAAC,IAAI,CAACoB,IAAI,CAAC,CAACC,GAAG,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC8B,MAAM,EAAE;MAClD3D,MAAM;MACNwC,IAAI;MACJoB,MAAM,EAAE,IAAI,CAAC7C,OAAO,GAAG,CAAC;MACxB8C,KAAK,EAAEV,QAAQ,GAAG;KACnB;IAEDW,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEX,EAAE,CAAC;IAE/B,IAAI,CAACnD,MAAM,GAAGmD,EAAE;EAClB;EAEAlD,eAAe,CAACjC,IAAY;IAC1B,IAAIkC,KAAK,GAAG,IAAI,CAACC,eAAe,CAACnC,IAAI,CAAC;IACtC,IAAI,CAACkC,KAAK,EAAE;MAAE;;IACd,MAAME,MAAM,GAAGF,KAAK,CAACvC,OAAO,CAAC,GAAG,CAAC;IACjC,MAAM0C,IAAI,GAAGH,KAAK,CAACI,WAAW,CAAC,GAAG,CAAC;IACnCJ,KAAK,GAAGA,KAAK,CAACtC,SAAS,CAACwC,MAAM,EAAEC,IAAI,GAAG,CAAC,CAAC,GAAG,GAAG;IAC/CjC,SAAS,CAACC,SAAS,CAACC,SAAS,CAAC4B,KAAK,CAAC;EACtC;EAEAC,eAAe,CAACnC,IAAY;IAC1B,QAAQA,IAAI;MACV,KAAK,IAAI;QACP,OAAO,IAAI,CAAC4C,eAAe,CAACmD,sBAAsB,CAAC,CAAC,IAAI,CAAC/D,MAAO,CAAC,CAAC;MACpE,KAAK,MAAM;QACT,OAAO,IAAI,CAACY,eAAe,CAACoD,iBAAiB,CAAC,CAAC,IAAI,CAAChE,MAAO,CAACuC,IAAI,CAAC,CAAC;MACpE,KAAK,OAAO;QACV,OAAO,IAAI,CAAC3B,eAAe,CAACqD,WAAW,CAACzD,uEAAc,CAAC,IAAI,CAACR,MAAO,CAACuC,IAAI,CAACG,IAAI,CAAC,CAAC;MACjF,KAAK,OAAO;QAAE;UACZ,MAAMa,KAAK,GAAG/C,uEAAc,CAAC,IAAI,CAACR,MAAO,CAACuC,IAAI,CAACG,IAAI,CAAC;UACpD,MAAMwB,QAAQ,GAAGX,KAAK,CACnBpC,MAAM,CAACa,CAAC,IAAIA,CAAC,CAACnE,IAAI,EAAEC,IAAI,IAAI,CAAC,IAAI,CAAC6C,WAAW,CAAC9B,OAAO,CAACsF,GAAG,CAACnC,CAAC,CAACnE,IAAI,CAACC,IAAI,CAAC,CAAC,CACvE8B,GAAG,CAACoC,CAAC,IAAIA,CAAC,CAACnE,IAAK,CAAC;UACpB,OAAO,IAAI,CAAC+C,eAAe,CAACwD,WAAW,CAACF,QAAQ,CAAC;;IAClD;IAEH,OAAO3E,SAAS;EAClB;EAEA8E,eAAe;IACb,MAAMC,GAAG,GAAG/D,6CAAM,EAAE;IAEpB+D,GAAG,CAACzC,UAAU,CAAC,CAAC,CAAC;IACjB,IAAIyC,GAAG,CAACC,OAAO,EAAE,GAAG,CAAC,KAAK,CAAC,EAAE;MAAED,GAAG,CAAC1C,GAAG,CAAC,CAAC,EAAE,MAAM,CAAC;;IAEjD,OAAO0C,GAAG,CAACZ,MAAM,EAAE;EACrB;EAEAf,eAAe,CAAC6B,QAAe;IAC7B,MAAMzC,SAAS,GAAG,IAAIlB,KAAK,EAAa;IAExC,KAAK,IAAIhB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;MAC3BkC,SAAS,CAAC3C,IAAI,CAAC,EAAE,CAAC;;IAGpB,MAAMqF,UAAU,GAAG,CAAC5E,CAAS,EAAE6C,IAAW,KAAI;MAC5CX,SAAS,CAAClC,CAAC,CAAC,GAAG;QACbhC,IAAI,EAAE6E,IAAI,CAAC7E,IAAI,EAAEC,IAAI;QACrB0B,CAAC,EAAEkD,IAAI,CAAClD,CAAC;QACTkF,CAAC,EAAEhC,IAAI,CAACgC,CAAC;QACTC,EAAE,EAAEjC,IAAI,CAACiC,EAAE;QACX3C,CAAC,EAAE,CAAC,CAACU,IAAI,CAACV,CAAC;QACX4C,EAAE,EAAE,CAAC,CAAClC,IAAI,CAACkC,EAAE;QACbC,EAAE,EAAE,CAAC,CAACnC,IAAI,CAACmC;OACZ;MAED,IAAInC,IAAI,CAACkC,EAAE,EAAE;QAAEH,UAAU,CAAC5E,CAAC,GAAG,CAAC,EAAE6C,IAAI,CAACkC,EAAE,CAAC;;MACzC,IAAIlC,IAAI,CAACV,CAAC,EAAE;QAAEyC,UAAU,CAAC5E,CAAC,GAAG,CAAC,EAAE6C,IAAI,CAACV,CAAC,CAAC;;MACvC,IAAIU,IAAI,CAACmC,EAAE,EAAE;QAAEJ,UAAU,CAAC5E,CAAC,GAAG,CAAC,EAAE6C,IAAI,CAACmC,EAAE,CAAC;;IAC3C,CAAC;IAED,IAAIhF,CAAC,GAAG,EAAE;IACV4E,UAAU,CAAC5E,CAAC,EAAE2E,QAAQ,CAAC;IAEvB,OAAOzC,SAAS;EAClB;EAEAuB,eAAe,CAACZ,IAAY,EAAE7C,CAAC,GAAG,EAAE;IAClC,MAAMiF,QAAQ,GAAG,IAAI,CAAC/C,SAAS,CAAClC,CAAC,CAAC;IAClC6C,IAAI,KAAK,IAAI,CAACqC,cAAc,CAACD,QAAQ,CAAE;IACvC,IAAI,CAACA,QAAQ,EAAE;MAAE,OAAOpC,IAAI;;IAE5B;IACA,IAAIoC,QAAQ,CAACF,EAAE,EAAE;MACf,MAAMI,CAAC,GAAGnF,CAAC,GAAG,CAAC;MACf,MAAMoF,YAAY,GAAG,IAAI,CAACF,cAAc,CAAC,IAAI,CAAChD,SAAS,CAACiD,CAAC,CAAC,CAAC;MAC3D,IAAIC,YAAY,EAAE;QAChBvC,IAAI,CAACkC,EAAE,GAAGK,YAAY;;MAExB,IAAI,CAAC3B,eAAe,CAAC2B,YAAY,EAAED,CAAC,CAAC;;IAGvC;IACA,IAAIF,QAAQ,CAAC9C,CAAC,EAAE;MACd,MAAMgD,CAAC,GAAGnF,CAAC,GAAG,CAAC;MACf,MAAMoF,YAAY,GAAG,IAAI,CAACF,cAAc,CAAC,IAAI,CAAChD,SAAS,CAACiD,CAAC,CAAC,CAAC;MAC3D,IAAIC,YAAY,EAAE;QAChBvC,IAAI,CAACV,CAAC,GAAGiD,YAAY;;MAEvB,IAAI,CAAC3B,eAAe,CAAC2B,YAAY,EAAED,CAAC,CAAC;;IAGvC;IACA,IAAIF,QAAQ,CAACD,EAAE,EAAE;MACf,MAAMG,CAAC,GAAGnF,CAAC,GAAG,CAAC;MACf,MAAMoF,YAAY,GAAG,IAAI,CAACF,cAAc,CAAC,IAAI,CAAChD,SAAS,CAACiD,CAAC,CAAC,CAAC;MAC3D,IAAIC,YAAY,EAAE;QAChBvC,IAAI,CAACmC,EAAE,GAAGI,YAAY;;MAExB,IAAI,CAAC3B,eAAe,CAAC2B,YAAY,EAAED,CAAC,CAAC;;IAGvC,OAAOtC,IAAI;EACb;EAEAqC,cAAc,CAACD,QAAmB;IAChC,IAAI,CAACA,QAAQ,EAAEjH,IAAI,EAAE;MAAE,OAAO0B,SAAS;;IAEvC,OAAO;MACLzB,IAAI,EAAET,8CAAM,CAAC,EAAE,CAAC;MAChBQ,IAAI,EAAE,IAAI,CAACqE,WAAW,CAACG,IAAI,CAACxC,CAAC,IAAIA,CAAC,CAAC/B,IAAI,KAAKgH,QAAQ,CAACjH,IAAI,CAAC;MAC1D2B,CAAC,EAAEsF,QAAQ,CAACtF,CAAC;MACbkF,CAAC,EAAEI,QAAQ,CAACJ,CAAC;MACbC,EAAE,EAAEG,QAAQ,CAACH;KACd;EACH;EAEA7B,WAAW;IACT,OAAO;MACLhF,IAAI,EAAET,8CAAM,CAAC,EAAE,CAAC;MAChBW,IAAI,EAAEyC,+EAAgB;MACtB1C,IAAI,EAAE,OAAO;MACbN,IAAI,EAAE;KACP;EACH;EAEAsF,cAAc;IACZ,OAAO;MACLjF,IAAI,EAAET,8CAAM,CAAC,EAAE,CAAC;MAChBW,IAAI,EAAEyC,+EAAgB;MACtB1C,IAAI,EAAE,UAAU;MAChBN,IAAI,EAAE;KACP;EACH;EAEAoF,cAAc;IACZ,OAAO;MACL/E,IAAI,EAAET,8CAAM,CAAC,EAAE,CAAC;MAChBW,IAAI,EAAEyC,gFAAiB;MACvB1C,IAAI,EAAE,WAAW;MACjBN,IAAI,EAAE;KACP;EACH;;AAnPWiD,8BAA8B;mBAA9BA,8BAA8B;AAAA;AAA9BA,8BAA8B;QAA9BA,8BAA8B;EAAA3D;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MC7B3CC,4DAAAA,UAAK;MACHA,oDAAAA,GACF;MAAAA,0DAAAA,EAAM;MAENA,4DAAAA,UAAK;MACHA,oDAAAA,gBACA;MAAAA,4DAAAA,gBAA4E;MAAvDA,wDAAAA;QAAA;MAAA,EAAoB;QAAA,OAAkBmB,mBAAe;MAAA,EAAjC;MACvCnB,wDAAAA,wEAA6F;MAC/FA,0DAAAA,EAAS;MAGXA,4DAAAA,UAAK;MACHA,oDAAAA,cACA;MAAAA,4DAAAA,eAAsC;MAAnBA,wDAAAA;QAAA;MAAA,EAAkB;MAArCA,0DAAAA,EAAsC;MAGxCA,4DAAAA,UAAK;MACHA,oDAAAA,cAAK;MAAAA,uDAAAA,UAAK;MAEVA,4DAAAA,cAA4B;MAC1BA,wDAAAA,qEA+BM;MACRA,0DAAAA,EAAM;MAGRA,4DAAAA,iBAAyC;MAAnBA,wDAAAA;QAAA,OAASmB,YAAQ;MAAA,EAAC;MAACnB,oDAAAA,gBAAQ;MAAAA,0DAAAA,EAAS;MAE1DA,wDAAAA,oEAaM;;;MArEJA,uDAAAA,GACF;MADEA,gEAAAA,2FACF;MAIuBA,uDAAAA,GAAoB;MAApBA,wDAAAA,uBAAoB;MACZA,uDAAAA,GAAgB;MAAhBA,wDAAAA,8BAAgB;MAM1BA,uDAAAA,GAAkB;MAAlBA,wDAAAA,qBAAkB;MAOKA,uDAAAA,GAAc;MAAdA,wDAAAA,0BAAc;MAqCpDA,uDAAAA,GAAY;MAAZA,wDAAAA,oBAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvDgB;AAEF;AACyB;AACW;;;;;;;;;;;ICD9DA,4DAAAA,cAEyC;IAAvCA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA;MAAA,OAASA,yDAAAA,kCAAuB,IAAI,CAAC;IAAA,EAAC;IAACA,oDAAAA,SAAE;IAAAA,0DAAAA,EAAM;;;;IADLA,yDAAAA,qBAAuB;;;;;;IAInEA,4DAAAA,cAEyC;IAAvCA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA;MAAA,OAASA,yDAAAA,mCAAuB,IAAI,CAAC;IAAA,EAAC;IAACA,oDAAAA,SAAE;IAAAA,0DAAAA,EAAM;;;;IADLA,yDAAAA,qBAAuB;;;;;;IAKpCA,4DAAAA,YAAyD;IAApCA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA;MAAA,OAASA,yDAAAA,qCAAyB;IAAA,EAAC;IAACA,oDAAAA,GAAa;IAAAA,0DAAAA,EAAI;;;;IAAjBA,uDAAAA,GAAa;IAAbA,+DAAAA,cAAa;;;;;;IAZvGA,4DAAAA,aAAsE;IACpEA,wDAAAA,6DAEiD;IACjDA,4DAAAA,aACwC;IAAtCA,wDAAAA;MAAA;MAAA;MAAA;MAAA,OAASA,yDAAAA,mCAAuB,GAAG,CAAC;IAAA,EAAC;IAACA,oDAAAA,QAAC;IAAAA,0DAAAA,EAAM;IAC/CA,wDAAAA,6DAEiD;IAEjDA,4DAAAA,UAAK;IACyBA,oDAAAA,GAAkC;IAAAA,0DAAAA,EAAM;IACpEA,4DAAAA,aAA6B;IAAAA,wDAAAA,yDAA0E;IAAAA,0DAAAA,EAAM;IAE7GA,4DAAAA,iBAAmF;IAA5EA,wDAAAA;MAAA;MAAA;MAAA;MAAA,OAASA,yDAAAA,uCAA2B;IAAA,EAAC;MAAA;MAAA;MAAA;MAAA,OAAYA,yDAAAA,qCAAyB;IAAA,EAArC;IAA5CA,0DAAAA,EAAmF;IAGrFA,4DAAAA,eAAkB;IAChBA,uDAAAA,oBAAsC;IACtCA,4DAAAA,iBAAuD;IAArBA,wDAAAA;MAAA;MAAA;MAAA,OAAaA,yDAAAA,oBAClD;IAAA,EADyD;IAAtDA,0DAAAA,EAAuD;IACvDA,uDAAAA,oBAAqC;IACrCA,4DAAAA,iBAAuD;IAArBA,wDAAAA;MAAA;MAAA;MAAA,OAAaA,yDAAAA,oBAClD;IAAA,EADyD;IAAtDA,0DAAAA,EAAuD;IACvDA,uDAAAA,oBAAuD;IACvDA,4DAAAA,iBAAwD;IAAtBA,wDAAAA;MAAA;MAAA;MAAA,OAAaA,yDAAAA,qBAClD;IAAA,EAD0D;IAAvDA,0DAAAA,EAAwD;IACxDA,uDAAAA,oBAAsD;IACtDA,4DAAAA,iBAAwD;IAAtBA,wDAAAA;MAAA;MAAA;MAAA,OAAaA,yDAAAA,qBAClD;IAAA,EAD0D;IAAvDA,0DAAAA,EAAwD;IACxDA,uDAAAA,oBAA+C;IAC/CA,4DAAAA,iBAAwD;IAAtBA,wDAAAA;MAAA;MAAA;MAAA,OAAaA,yDAAAA,qBAClD;IAAA,EAD0D;IAAvDA,0DAAAA,EAAwD;IACxDA,uDAAAA,oBAAuD;IACvDA,4DAAAA,iBAAwD;IAAtBA,wDAAAA;MAAA;MAAA;MAAA,OAAaA,yDAAAA,qBAClD;IAAA,EAD0D;IAAvDA,0DAAAA,EAAwD;;;;;IA5BpDA,uDAAAA,GAAa;IAAbA,wDAAAA,wBAAa;IAG2BA,uDAAAA,GAAsB;IAAtBA,yDAAAA,oBAAsB;IAE9DA,uDAAAA,GAAa;IAAbA,wDAAAA,wBAAa;IAKWA,uDAAAA,GAAkC;IAAlCA,gEAAAA,6EAAkC;IAC7BA,uDAAAA,GAAe;IAAfA,wDAAAA,sBAAe;IAOdA,uDAAAA,GAAoB;IAApBA,wDAAAA,sBAAoB;IAEpBA,uDAAAA,GAAoB;IAApBA,wDAAAA,sBAAoB;IAEpBA,uDAAAA,GAAqB;IAArBA,wDAAAA,uBAAqB;IAErBA,uDAAAA,GAAqB;IAArBA,wDAAAA,uBAAqB;IAErBA,uDAAAA,GAAqB;IAArBA,wDAAAA,uBAAqB;IAC5BA,uDAAAA,GAAgB;IAAhBA,wDAAAA,iBAAgB;IACTA,uDAAAA,GAAqB;IAArBA,wDAAAA,uBAAqB;;;;;;IAQ/DA,4DAAAA,UAAoB;IACIA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAASA,yDAAAA,yBAAgB,MAAM,CAAC;IAAA,EAAC;IACrDA,oDAAAA,kBACF;IAAAA,0DAAAA,EAAS;IACTA,4DAAAA,gBAAyD;IAAnCA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAASA,yDAAAA,yBAAgB,OAAO,CAAC;IAAA,EAAC;IACtDA,oDAAAA,mBACF;IAAAA,0DAAAA,EAAS;IACTA,4DAAAA,gBAAyD;IAAnCA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAASA,yDAAAA,yBAAgB,OAAO,CAAC;IAAA,EAAC;IACtDA,oDAAAA,mBACF;IAAAA,0DAAAA,EAAS;;;ADfL,MAAOgI,mBAAmB;EAO9B7H,YACmBkB,YAAyB,EACzB4G,gBAAiC,EACjCC,MAAsB;IAFtB,iBAAY,GAAZ7G,YAAY;IACZ,qBAAgB,GAAhB4G,gBAAgB;IAChB,WAAM,GAANC,MAAM;IATzB,gBAAW,GAAG,IAAIzE,KAAK,EAAS;IAW5B,IAAI,CAACkB,SAAS,GAAG,EAAE;IACnB,KAAK,IAAIlC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;MAAE,IAAI,CAACkC,SAAS,CAAC3C,IAAI,CAAC;QACjD4C,CAAC,EAAE,EAAE,CAACnC,CAAC,GAAC,CAAC,IAAI,CAAC;OACf,CAAC;;EACN;EAEA0F,QAAQ;IACN,IAAI,CAACxD,SAAS,CAAC7C,OAAO,CAAC8C,CAAC,IAAIA,CAAC,CAACnE,IAAI,GAAG0B,SAAS,CAAC;IAE/C,MAAMiG,QAAQ,GAAG,IAAI,CAACF,MAAM,CAACG,QAAQ,CAACC,WAAW,CAAC,MAAM,CAAC;IACzD,IAAIF,QAAQ,EAAE;MACZ,MAAMjD,IAAI,GAAG,IAAI,CAAC9D,YAAY,CAACI,OAAO,CAACC,GAAG,CAAC0G,QAAQ,CAAgB;MACnE,IAAI,CAACzD,SAAS,GAAG,IAAI,CAACY,eAAe,CAACJ,IAAI,CAACG,IAAI,CAAC;;IAGlD,IAAI,CAACR,WAAW,GAAG,EAAE;IAErB;IACA,IAAI,CAACA,WAAW,CAAC9C,IAAI,CAAC,GAAG,IAAI,CAACX,YAAY,CAACkH,UAAU,CAAChG,KAAK,CAAC;IAE5D;IACA,IAAI,CAACuC,WAAW,CAAC9C,IAAI,CAAC;MAAEtB,IAAI,EAAE,aAAa;MAAEC,IAAI,EAAE,iBAAiB;MAAEC,IAAI,EAAEyC,+EAAgBmC;IAAA,CAAE,CAAC;IAC/F,IAAI,CAACV,WAAW,CAAC9C,IAAI,CAAC,IAAI,CAACyD,cAAc,EAAE,CAAC;IAC5C,IAAI,CAACX,WAAW,CAAC9C,IAAI,CAAC,IAAI,CAAC0D,WAAW,EAAE,CAAC;IACzC,IAAI,CAACZ,WAAW,CAAC9C,IAAI,CAAC,IAAI,CAAC2D,cAAc,EAAE,CAAC;IAC5C,IAAI,CAACb,WAAW,CAAC9C,IAAI,CAAC,IAAI,CAAC2D,cAAc,EAAE,CAAC;IAC5C,IAAI,CAACb,WAAW,CAAC9C,IAAI,CAAC,IAAI,CAAC2D,cAAc,EAAE,CAAC;IAC5C,IAAI,CAACb,WAAW,CAAC9C,IAAI,CAAC,IAAI,CAAC2D,cAAc,EAAE,CAAC;EAC9C;EAEAC,gBAAgB,CAACN,IAAS,EAAEO,SAAiB;IAC3CP,IAAI,CAACO,SAAS,CAAC,GAAG,CAACP,IAAI,CAACO,SAAS,CAAC;EACpC;EAEA2C,gBAAgB,CAACC,KAAY,EAAEhG,CAAS;IACtC,MAAMiG,MAAM,GAAID,KAAK,CAACC,MAA2B;IACjD,MAAM5F,KAAK,GAAG4F,MAAM,EAAE5F,KAAe;IACrC,IAAI,CAACA,KAAK,EAAE;MAAE;;IAEd,MAAM6F,QAAQ,GAAG,IAAI,CAACC,eAAe,CAAC9F,KAAK,CAAC;IAC5C,IAAI6F,QAAQ,EAAE;MACZ,IAAI,CAAChE,SAAS,CAAClC,CAAC,CAAC,GAAGkG,QAAQ;MAC5B;;IAGF,MAAMlI,IAAI,GAAG,IAAI,CAACY,YAAY,CAACI,OAAO,CAACC,GAAG,CAACoB,KAAK,CAAU;IAC1D,IAAI,CAACrC,IAAI,EAAE;MAAE;;IAEb,IAAI,CAACkE,SAAS,CAAClC,CAAC,CAAC,CAAChC,IAAI,GAAGA,IAAI,CAACC,IAAI;IAClC,IAAI,CAACiE,SAAS,CAAClC,CAAC,CAAC,CAACoG,OAAO,GAAGpI,IAAI;IAEhCiI,MAAM,CAAC5F,KAAK,GAAG,EAAE;IACjB4F,MAAM,CAACI,IAAI,EAAE;EACf;EAEAC,cAAc,CAACN,KAAoB,EAAEhG,CAAS;IAC5C,IAAIgG,KAAK,CAACO,GAAG,KAAK,OAAO,EAAE;MAAE;KAAS,CAAE;IAExC,MAAMN,MAAM,GAAID,KAAK,CAACC,MAA2B;IACjD,MAAM5F,KAAK,GAAG4F,MAAM,EAAE5F,KAAe;IACrC,IAAI,CAACA,KAAK,EAAE;MAAE;;IACd,MAAMmG,OAAO,GAAGlB,mDAAY,CAACjF,KAAK,EAAE,IAAI,CAACgC,WAAW,EAAE;MAAEkE,GAAG,EAAE,MAAM;MAAEG,KAAK,EAAE;IAAC,CAAE,CAAC;IAChF,MAAM1I,IAAI,GAAGwI,OAAO,GAAG,CAAC,CAAC,CAACG,GAAY;IACtC,IAAI,CAAC3I,IAAI,EAAE;MAAE;;IAEb,IAAI,CAACkE,SAAS,CAAClC,CAAC,CAAC,CAAChC,IAAI,GAAGA,IAAI,CAACC,IAAI;IAClC,IAAI,CAACiE,SAAS,CAAClC,CAAC,CAAC,CAACoG,OAAO,GAAGpI,IAAI;IAEhCiI,MAAM,CAAC5F,KAAK,GAAG,EAAE;EACnB;EAEAlB,MAAM;IACJ,MAAMqE,QAAQ,GAAG,IAAI,CAACC,eAAe,EAAE;IACvC,MAAMC,KAAK,GAAG/C,uEAAc,CAAC6C,QAAQ,CAAC;IAEtC;IACA,MAAMd,IAAI,GAAgB;MACxBzE,IAAI,EAAET,8CAAM,CAAC,EAAE,CAAC;MAChBqF,IAAI,EAAEa,KAAK,CAAC,CAAC;KACd;IAEDM,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEvB,IAAI,CAAC;IAEnC,IAAI,CAACvC,MAAM,GAAGuC,IAAI;EACpB;EAEAtC,eAAe,CAACjC,IAAY;IAC1B,IAAIkC,KAAK,GAAG,IAAI,CAACC,eAAe,CAACnC,IAAI,CAAC;IACtC,IAAI,CAACkC,KAAK,EAAE;MAAE;;IACd,MAAME,MAAM,GAAGF,KAAK,CAACvC,OAAO,CAAC,GAAG,CAAC;IACjC,MAAM0C,IAAI,GAAGH,KAAK,CAACI,WAAW,CAAC,GAAG,CAAC;IACnCJ,KAAK,GAAGA,KAAK,CAACtC,SAAS,CAACwC,MAAM,EAAEC,IAAI,GAAG,CAAC,CAAC,GAAG,GAAG;IAC/CjC,SAAS,CAACC,SAAS,CAACC,SAAS,CAAC4B,KAAK,CAAC;EACtC;EAEAC,eAAe,CAACnC,IAAY;IAC1B,QAAQA,IAAI;MACV,KAAK,MAAM;QACT,OAAO,IAAI,CAACqH,gBAAgB,CAACrB,iBAAiB,CAAC,CAAC,IAAI,CAAChE,MAAO,CAAC,CAAC;MAChE,KAAK,OAAO;QACV,OAAO,IAAI,CAACqF,gBAAgB,CAACpB,WAAW,CAACzD,uEAAc,CAAC,IAAI,CAACR,MAAO,CAAC0C,IAAI,CAAC,CAAC;MAC7E,KAAK,OAAO;QAAE;UACZ,MAAMa,KAAK,GAAG/C,uEAAc,CAAC,IAAI,CAACR,MAAO,CAAC0C,IAAI,CAAC;UAC/C,MAAMwB,QAAQ,GAAGX,KAAK,CACnBpC,MAAM,CAACa,CAAC,IAAIA,CAAC,CAACnE,IAAI,EAAEC,IAAI,IAAI,CAAC,IAAI,CAACW,YAAY,CAACI,OAAO,CAACsF,GAAG,CAACnC,CAAC,CAACnE,IAAI,CAACC,IAAI,CAAC,CAAC,CACxE8B,GAAG,CAACoC,CAAC,IAAIA,CAAC,CAACnE,IAAK,CAAC;UACpB,OAAO,IAAI,CAACwH,gBAAgB,CAACjB,WAAW,CAACF,QAAQ,CAAC;;IACnD;IAEH,OAAO3E,SAAS;EAClB;EAEAoD,eAAe,CAAC6B,QAAe;IAC7B,MAAMzC,SAAS,GAAG,IAAIlB,KAAK,EAAa;IAExC,KAAK,IAAIhB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;MAC3BkC,SAAS,CAAC3C,IAAI,CAAC,EAAE,CAAC;;IAGpB,MAAMqF,UAAU,GAAG,CAAC5E,CAAS,EAAE6C,IAAW,KAAI;MAC5CX,SAAS,CAAClC,CAAC,CAAC,GAAG;QACbhC,IAAI,EAAE6E,IAAI,CAAC7E,IAAI,EAAEC,IAAI;QACrBmI,OAAO,EAAEvD,IAAI,CAAC7E,IAAI;QAClB2B,CAAC,EAAEkD,IAAI,CAAClD,CAAC;QACTkF,CAAC,EAAEhC,IAAI,CAACgC,CAAC;QACTC,EAAE,EAAEjC,IAAI,CAACiC,EAAE;QACX8B,EAAE,EAAE/D,IAAI,CAAC+D,EAAE;QACXhH,EAAE,EAAEiD,IAAI,CAACjD,EAAE;QACXiH,EAAE,EAAEhE,IAAI,CAACgE,EAAE;QACX1E,CAAC,EAAE,CAAC,CAACU,IAAI,CAACV,CAAC;QACX4C,EAAE,EAAE,CAAC,CAAClC,IAAI,CAACkC,EAAE;QACbC,EAAE,EAAE,CAAC,CAACnC,IAAI,CAACmC;OACZ;MAED,IAAInC,IAAI,CAACkC,EAAE,EAAE;QAAEH,UAAU,CAAC5E,CAAC,GAAG,CAAC,EAAE6C,IAAI,CAACkC,EAAE,CAAC;;MACzC,IAAIlC,IAAI,CAACV,CAAC,EAAE;QAAEyC,UAAU,CAAC5E,CAAC,GAAG,CAAC,EAAE6C,IAAI,CAACV,CAAC,CAAC;;MACvC,IAAIU,IAAI,CAACmC,EAAE,EAAE;QAAEJ,UAAU,CAAC5E,CAAC,GAAG,CAAC,EAAE6C,IAAI,CAACmC,EAAE,CAAC;;IAC3C,CAAC;IAED,IAAIhF,CAAC,GAAG,EAAE;IACV4E,UAAU,CAAC5E,CAAC,EAAE2E,QAAQ,CAAC;IAEvB,OAAOzC,SAAS;EAClB;EAEA4E,mBAAmB,CAACjE,IAAe;IACjC,MAAMV,CAAC,GAAG;MAAC,GAAGU;IAAI,CAAC;IACnB,OAAOV,CAAC,CAACiE,OAAO;IAEhB7H,SAAS,CAACC,SAAS,CAACC,SAAS,CAACJ,IAAI,CAACC,SAAS,CAAC6D,CAAC,CAAC,CAAC;EAClD;EAEAgE,eAAe,CAAC/H,IAAY;IAC1B,IAAI;MACF,MAAMyE,IAAI,GAAGxE,IAAI,CAAC0I,KAAK,CAAC3I,IAAI,CAAc;MAC1C,IAAIyE,IAAI,CAAC7E,IAAI,EAAE;QACb6E,IAAI,CAACuD,OAAO,GAAG,IAAI,CAACxH,YAAY,CAACI,OAAO,CAACC,GAAG,CAAC4D,IAAI,CAAC7E,IAAI,CAAU;;MAGlE,OAAO6E,IAAI;KACZ,CAAC,MAAM;MAAE,OAAOnD,SAAS;;EAC5B;EAEA+D,eAAe,CAACZ,IAAY,EAAE7C,CAAC,GAAG,EAAE;IAClC,MAAMiF,QAAQ,GAAG,IAAI,CAAC/C,SAAS,CAAClC,CAAC,CAAC;IAClC6C,IAAI,KAAK,IAAI,CAACqC,cAAc,CAACD,QAAQ,CAAE;IACvC,IAAI,CAACA,QAAQ,EAAE;MAAE,OAAOpC,IAAI;;IAE5B;IACA,IAAIoC,QAAQ,CAACF,EAAE,EAAE;MACf,MAAMI,CAAC,GAAGnF,CAAC,GAAG,CAAC;MACf,MAAMoF,YAAY,GAAG,IAAI,CAACF,cAAc,CAAC,IAAI,CAAChD,SAAS,CAACiD,CAAC,CAAC,CAAC;MAC3D,IAAIC,YAAY,EAAE;QAChBvC,IAAI,CAACkC,EAAE,GAAGK,YAAY;;MAExB,IAAI,CAAC3B,eAAe,CAAC2B,YAAY,EAAED,CAAC,CAAC;;IAGvC;IACA,IAAIF,QAAQ,CAAC9C,CAAC,EAAE;MACd,MAAMgD,CAAC,GAAGnF,CAAC,GAAG,CAAC;MACf,MAAMoF,YAAY,GAAG,IAAI,CAACF,cAAc,CAAC,IAAI,CAAChD,SAAS,CAACiD,CAAC,CAAC,CAAC;MAC3D,IAAIC,YAAY,EAAE;QAChBvC,IAAI,CAACV,CAAC,GAAGiD,YAAY;;MAEvB,IAAI,CAAC3B,eAAe,CAAC2B,YAAY,EAAED,CAAC,CAAC;;IAGvC;IACA,IAAIF,QAAQ,CAACD,EAAE,EAAE;MACf,MAAMG,CAAC,GAAGnF,CAAC,GAAG,CAAC;MACf,MAAMoF,YAAY,GAAG,IAAI,CAACF,cAAc,CAAC,IAAI,CAAChD,SAAS,CAACiD,CAAC,CAAC,CAAC;MAC3D,IAAIC,YAAY,EAAE;QAChBvC,IAAI,CAACmC,EAAE,GAAGI,YAAY;;MAExB,IAAI,CAAC3B,eAAe,CAAC2B,YAAY,EAAED,CAAC,CAAC;;IAGvC,OAAOtC,IAAI;EACb;EAEAqC,cAAc,CAACD,QAAmB;IAChC,IAAI,CAACA,QAAQ,EAAEjH,IAAI,EAAE;MAAE,OAAO0B,SAAS;;IAEvC,OAAO;MACLzB,IAAI,EAAET,8CAAM,CAAC,EAAE,CAAC;MAChBQ,IAAI,EAAE,IAAI,CAACqE,WAAW,CAACG,IAAI,CAACxC,CAAC,IAAIA,CAAC,CAAC/B,IAAI,KAAKgH,QAAQ,CAACjH,IAAI,CAAC;MAC1D2B,CAAC,EAAEsF,QAAQ,CAACtF,CAAC;MACbkF,CAAC,EAAEI,QAAQ,CAACJ,CAAC;MACbC,EAAE,EAAEG,QAAQ,CAACH,EAAE;MACf8B,EAAE,EAAE3B,QAAQ,CAAC2B,EAAE;MACfhH,EAAE,EAAEqF,QAAQ,CAACrF,EAAE;MACfiH,EAAE,EAAE5B,QAAQ,CAAC4B;KACd;EACH;EAEA5D,WAAW;IACT,OAAO;MACLhF,IAAI,EAAET,8CAAM,CAAC,EAAE,CAAC;MAChBW,IAAI,EAAEyC,+EAAgB;MACtB1C,IAAI,EAAE,OAAO;MACbN,IAAI,EAAE;KACP;EACH;EAEAsF,cAAc;IACZ,OAAO;MACLjF,IAAI,EAAET,8CAAM,CAAC,EAAE,CAAC;MAChBW,IAAI,EAAEyC,+EAAgB;MACtB1C,IAAI,EAAE,UAAU;MAChBN,IAAI,EAAE;KACP;EACH;EAEAoF,cAAc;IACZ,OAAO;MACL/E,IAAI,EAAET,8CAAM,CAAC,EAAE,CAAC;MAChBW,IAAI,EAAEyC,gFAAiB;MACvB1C,IAAI,EAAE,WAAW;MACjBN,IAAI,EAAE;KACP;EACH;;AA7PW2H,mBAAmB;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB;QAAnBA,mBAAmB;EAAArI;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCnChCC,4DAAAA,UAAK;MACHA,oDAAAA,aAAK;MAAAA,uDAAAA,SAAK;MAEVA,4DAAAA,aAA4B;MAC1BA,wDAAAA,yDA+BM;MACRA,0DAAAA,EAAM;MAGRA,4DAAAA,gBAAyC;MAAnBA,wDAAAA;QAAA,OAASmB,YAAQ;MAAA,EAAC;MAACnB,oDAAAA,eAAQ;MAAAA,0DAAAA,EAAS;MAE1DA,wDAAAA,uDAUM;;;MA/CsCA,uDAAAA,GAAc;MAAdA,wDAAAA,0BAAc;MAqCpDA,uDAAAA,GAAY;MAAZA,wDAAAA,oBAAY;;;;;;;;;;;;;;;;;;;;;;;;;;ACxCqC;AACsC;AAC2B;AACnC;AACA;AACA;;;AAErF,MAAM0J,MAAM,GAAW,CACrB;EAAEC,IAAI,EAAE,EAAE;EAAEC,SAAS,EAAElK,sGAAwBA;AAAA,CAAE,EACjD;EAAEiK,IAAI,EAAE,IAAI;EAAEC,SAAS,EAAEtG,iIAA8BA;AAAA,CAAE,EACzD;EAAEqG,IAAI,EAAE,MAAM;EAAEC,SAAS,EAAE5B,8FAAmBA;AAAA,CAAE,EAChD;EAAE2B,IAAI,EAAE,MAAM;EAAEC,SAAS,EAAExI,8FAAmBA;AAAA,CAAE,EAChD;EAAEuI,IAAI,EAAE,MAAM;EAAEC,SAAS,EAAE1J,8FAAmBA;AAAA,CAAE,CACjD;AAWK,MAAO2J,mBAAmB;AAAnBA,mBAAmB;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB;QAAnBA;AAAmB;AAAnBA,mBAAmB;YAN5BJ,kEAAqB,CAACC,MAAM,CAAC,EAG7BD,yDAAY;AAAA;;sHAGHI,mBAAmB;IAAAE,UAAAA,yDAAAA;IAAAC,UAH5BP,yDAAY;EAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;ACrB+B;AAC8C;AAC/B;AAC0D;AAC3E;AACwC;AACA;AACA;AAC9B;;AAiBjD,MAAOW,YAAY;AAAZA,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;QAAZA;AAAY;AAAZA,YAAY;YANrBH,yDAAY,EACZC,uDAAW,EACXC,iEAAa,EACbN,uEAAmB;AAAA;;sHAGVO,YAAY;IAAAC,eAbrB3K,sGAAwB,EACxB4D,iIAA8B,EAC9B0E,8FAAmB,EACnB5G,8FAAmB,EACnBlB,8FAAmB;IAAA6J,UAGnBE,yDAAY,EACZC,uDAAW,EACXC,iEAAa,EACbN,uEAAmB;EAAA;AAAA;;;;;;;;;;;;;;;;;ACtBK;;AAStB,MAAOS,eAAe;EAE1BnK,eAAgB;EAEhBwG,sBAAsB,CAACZ,EAA2B;IAChD,OAAO,IAAI,CAAChF,SAAS,CAACgF,EAAE,CAACvD,GAAG,CAACuD,EAAE,IAAG;MAChC,MAAMxB,IAAI,GAAGpB,6CAAM,CAAC4C,EAAE,CAACxB,IAAI,CAAC;MAC5B,OAAO;QACL7D,IAAI,EAAEqF,EAAE,CAACrF,IAAI;QACb6D,IAAI,EAAE;UAAEgG,GAAG,EAAEhG,IAAI,CAACA,IAAI,EAAE;UAAEiG,KAAK,EAAEjG,IAAI,CAACiG,KAAK,EAAE,GAAG,CAAC;UAAEC,IAAI,EAAElG,IAAI,CAACkG,IAAI;QAAE,CAAE;QACtE9H,MAAM,EAAEoD,EAAE,CAACpD,MAAM,CAACjC,IAAI;QACtByE,IAAI,EAAEY,EAAE,CAACZ,IAAI,CAACzE;OACf;IACH,CAAC,CAAC,CAAC;EACL;EAEAkG,iBAAiB,CAAC8D,KAAyB;IACzC,OAAO,IAAI,CAAC3J,SAAS,CAAC2J,KAAK,CAAClI,GAAG,CAAC2C,IAAI,IAAG;MACrC,OAAO;QACLzE,IAAI,EAAEyE,IAAI,CAACzE,IAAI;QACf4E,IAAI,EAAEH,IAAI,CAACG,IAAI,CAAC5E;OACjB;IACH,CAAC,CAAC,CAAC;EACL;EAEAmG,WAAW,CAACV,KAAmB;IAC7B,OAAO,IAAI,CAACpF,SAAS,CAACoF,KAAK,CAAC3D,GAAG,CAAC8C,IAAI,IAAG;MACrC,OAAO;QACL5E,IAAI,EAAE4E,IAAI,CAAC5E,IAAI;QACfD,IAAI,EAAE6E,IAAI,CAAC7E,IAAI,EAAEC,IAAI;QACrB0B,CAAC,EAAEkD,IAAI,CAAClD,CAAC;QACTkF,CAAC,EAAEhC,IAAI,CAACgC,CAAC;QACTjF,EAAE,EAAEiD,IAAI,CAACjD,EAAE;QACXiH,EAAE,EAAEhE,IAAI,CAACgE,EAAE;QACX/B,EAAE,EAAEjC,IAAI,CAACiC,EAAE;QACXC,EAAE,EAAElC,IAAI,CAACkC,EAAE,EAAE9G,IAAI;QACjBkE,CAAC,EAAEU,IAAI,CAACV,CAAC,EAAElE,IAAI;QACf+G,EAAE,EAAEnC,IAAI,CAACmC,EAAE,EAAE/G;OACd;IACH,CAAC,CAAC,CAAC;EACL;EAEAsG,WAAW,CAACzE,KAAmB;IAC7B,OAAO,IAAI,CAACxB,SAAS,CAACwB,KAAK,CAACC,GAAG,CAAC/B,IAAI,IAAG;MACrC,OAAO;QACLC,IAAI,EAAED,IAAI,CAACC,IAAI;QACfE,IAAI,EAAEH,IAAI,CAACG,IAAI;QACfD,IAAI,EAAEF,IAAI,CAACE,IAAI;QACfN,IAAI,EAAEI,IAAI,CAACJ,IAAI;QACfsK,KAAK,EAAElK,IAAI,CAACkK;OACb;IACH,CAAC,CAAC,CAAC;EACL;EAEQ5J,SAAS,CAAC6J,KAAqB;IACrC,OAAO9J,IAAI,CAACC,SAAS,CAAC6J,KAAK,EAAEzI,SAAS,EAAE,CAAC,CAAC;EAC5C;;AAxDWmI,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;SAAfA,eAAe;EAAAO,SAAfP,eAAe;EAAAQ,YAFd;AAAM;;;;;;;;;;;;;;;;;;;ACRiC;AAC9C,IAAIE,MAAM,GAAGC,KAAK,IAAIC,MAAM,CAACC,eAAe,CAAC,IAAIC,UAAU,CAACH,KAAK,CAAC,CAAC;AACnE,IAAII,YAAY,GAAG,CAACC,QAAQ,EAAEC,WAAW,EAAEC,SAAS,KAAK;EAC9D,IAAIC,IAAI,GAAG,CAAC,CAAC,IAAKC,IAAI,CAAChF,GAAG,CAAC4E,QAAQ,CAAC1H,MAAM,GAAG,CAAC,CAAC,GAAG8H,IAAI,CAACC,GAAI,IAAI,CAAC;EAChE,IAAIC,IAAI,GAAG,CAAC,EAAG,GAAG,GAAGH,IAAI,GAAGF,WAAW,GAAID,QAAQ,CAAC1H,MAAM,CAAC;EAC3D,OAAO,CAACiI,IAAI,GAAGN,WAAW,KAAK;IAC7B,IAAIO,EAAE,GAAG,EAAE;IACX,OAAO,IAAI,EAAE;MACX,IAAIb,KAAK,GAAGO,SAAS,CAACI,IAAI,CAAC;MAC3B,IAAIhE,CAAC,GAAGgE,IAAI;MACZ,OAAOhE,CAAC,EAAE,EAAE;QACVkE,EAAE,IAAIR,QAAQ,CAACL,KAAK,CAACrD,CAAC,CAAC,GAAG6D,IAAI,CAAC,IAAI,EAAE;QACrC,IAAIK,EAAE,CAAClI,MAAM,KAAKiI,IAAI,EAAE,OAAOC,EAAE;MACnC;IACF;EACF,CAAC;AACH,CAAC;AACM,IAAIC,cAAc,GAAG,CAACT,QAAQ,EAAEO,IAAI,GAAG,EAAE,KAC9CR,YAAY,CAACC,QAAQ,EAAEO,IAAI,EAAEb,MAAM,CAAC;AAC/B,IAAI/K,MAAM,GAAG,CAAC4L,IAAI,GAAG,EAAE,KAC5BX,MAAM,CAACC,eAAe,CAAC,IAAIC,UAAU,CAACS,IAAI,CAAC,CAAC,CAACG,MAAM,CAAC,CAACF,EAAE,EAAEG,IAAI,KAAK;EAChEA,IAAI,IAAI,EAAE;EACV,IAAIA,IAAI,GAAG,EAAE,EAAE;IACbH,EAAE,IAAIG,IAAI,CAACC,QAAQ,CAAC,EAAE,CAAC;EACzB,CAAC,MAAM,IAAID,IAAI,GAAG,EAAE,EAAE;IACpBH,EAAE,IAAI,CAACG,IAAI,GAAG,EAAE,EAAEC,QAAQ,CAAC,EAAE,CAAC,CAACC,WAAW,EAAE;EAC9C,CAAC,MAAM,IAAIF,IAAI,GAAG,EAAE,EAAE;IACpBH,EAAE,IAAI,GAAG;EACX,CAAC,MAAM;IACLA,EAAE,IAAI,GAAG;EACX;EACA,OAAOA,EAAE;AACX,CAAC,EAAE,EAAE,CAAC;;;;;;;;;;;;;;AChCD,MAAMf,WAAW,GACtB,kEAAkE","sources":["./src/app/editor/components/dashboard/editor-dashboard.component.ts","./src/app/editor/components/dashboard/editor-dashboard.component.html","./src/app/editor/components/editor-item/editor-item.component.ts","./src/app/editor/components/editor-item/editor-item.component.html","./src/app/editor/components/editor-shop/editor-shop.component.ts","./src/app/editor/components/editor-shop/editor-shop.component.html","./src/app/editor/components/editor-traveling-spirit/editor-traveling-spirit.component.ts","./src/app/editor/components/editor-traveling-spirit/editor-traveling-spirit.component.html","./src/app/editor/components/editor-tree/editor-tree.component.ts","./src/app/editor/components/editor-tree/editor-tree.component.html","./src/app/editor/editor-routing.module.ts","./src/app/editor/editor.module.ts","./src/app/services/data-json.service.ts","./node_modules/nanoid/index.browser.js","./node_modules/nanoid/url-alphabet/index.js"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-editor-dashboard',\n  templateUrl: './editor-dashboard.component.html',\n  styleUrls: ['./editor-dashboard.component.less']\n})\nexport class EditorDashboardComponent {\n\n}\n","<a [routerLink]=\"['/editor/ts']\">Create TS</a>\n<a [routerLink]=\"['/editor/tree']\">Create Spirit Tree</a>\n<a [routerLink]=\"['/editor/shop']\">Create Shop</a>\n","import { Component } from '@angular/core';\nimport { nanoid } from 'nanoid';\nimport { IItem, ItemType } from 'src/app/interfaces/item.interface';\n\n@Component({\n  selector: 'app-editor-item',\n  templateUrl: './editor-item.component.html',\n  styleUrls: ['./editor-item.component.less']\n})\nexport class EditorItemComponent {\n  name: string = '';\n  type: string = '';\n  icon: string = '';\n\n  typeOptions = [\n    '',\n    'Hat',\n    'Hair',\n    'Mask',\n    'Necklace',\n    'Outfit',\n    'Cape',\n    'Instrument',\n    'Held',\n    'Prop',\n    'Emote',\n    'Stance',\n    'Call',\n    'Spell',\n    'Music',\n    'Quest',\n    'WingBuff',\n    'Special'\n  ];\n\n  generate(): void {\n    let icon = this.icon;\n    const iRevision = icon.indexOf('/revision');\n    if (iRevision >= 0) { icon = icon.substring(0, iRevision); }\n\n    const item: IItem = {\n      guid: nanoid(10),\n      name: this.name,\n      type: this.type as ItemType,\n      icon\n    }\n\n    let json = JSON.stringify(item, null, 2);\n    navigator.clipboard.writeText(json + ',');\n  }\n}\n","Name\n<input type=\"text\" class=\"form-control\" placeholder=\"Name\" [(ngModel)]=\"name\">\nType\n<select class=\"form-control\" [(ngModel)]=\"type\">\n  <option *ngFor=\"let option of typeOptions\">{{option}}</option>\n</select>\nIcon\n<input type=\"text\" class=\"form-control\" placeholder=\"Icon\" [(ngModel)]=\"icon\">\n\n<button type=\"button\" class=\"btn btn-primary\" (click)=\"generate()\">Generate</button>\n","import { Component } from '@angular/core';\nimport { nanoid } from 'nanoid';\nimport { IShop } from 'src/app/interfaces/shop.interface';\nimport { DataService } from 'src/app/services/data.service';\n\n@Component({\n  selector: 'app-editor-shop',\n  templateUrl: './editor-shop.component.html',\n  styleUrls: ['./editor-shop.component.less']\n})\nexport class EditorShopComponent {\n  copyShopGuid?: string;\n  copyShop?: IShop;\n  returning = true;\n\n  result?: any;\n\n  constructor(\n    private readonly _dataService: DataService,\n  ) {}\n\n  shopGuidChanged(): void {\n    if (!this.copyShopGuid) { return; }\n    const shop = this._dataService.guidMap.get(this.copyShopGuid) as IShop;\n    if (!shop) { return; }\n    this.copyShop = shop;\n  }\n\n  submit(): void {\n    if (!this.copyShop) { return; }\n    // Copy IAPs\n    const iaps: Array<any> = [];\n    this.copyShop.iaps?.forEach(iap => {\n      iaps.push({\n        guid: nanoid(10),\n        name: iap.name,\n        price: iap.price,\n        returning: this.returning || undefined,\n        c: iap.c,\n        sc: iap.sc,\n        sp: iap.sp,\n        items: iap.items ? [...iap.items.map(i => i.guid)] : undefined\n      });\n    });\n\n    // Copy shop\n    const newShop = {\n      guid: nanoid(10),\n      type: this.copyShop.type,\n      spirit: this.copyShop.spirit?.guid || undefined,\n      iaps: iaps.map(iap => iap.guid)\n    };\n\n    this.result = {\n      shop: newShop,\n      iaps\n    };\n  }\n\n\n  copyToClipboard(type: string): void {\n    let value = this.getForClipboard(type);\n    if (!value) { return; }\n    let json = JSON.stringify(value, undefined, 2);\n    const startI = json.indexOf('{');\n    const endI = json.lastIndexOf('}');\n    json = json.substring(startI, endI + 1) + ',';\n    navigator.clipboard.writeText(json);\n  }\n\n  getForClipboard(type: string): Array<any> {\n    switch (type) {\n      case 'shop': return [this.result.shop];\n      case 'iaps': return this.result.iaps;\n      default: return [];\n    }\n  }\n}\n","<div>\n  Shop to copy: <input type=\"text\" [(ngModel)]=\"copyShopGuid\"  (ngModelChange)=\"shopGuidChanged()\"/><br/>\n  Returning IAPs: <input type=\"checkbox\" [(ngModel)]=\"returning\"/>\n  <button type=\"button\" (click)=\"submit()\">Submit</button>\n</div>\n\n<div *ngIf=\"result\">\n  <button type=\"button\" (click)=\"copyToClipboard('shop')\">\n    Copy Shop\n  </button>\n  <button type=\"button\" (click)=\"copyToClipboard('iaps')\">\n    Copy IAPs\n  </button>\n</div>\n","import { Component } from '@angular/core';\nimport moment from 'moment';\nimport { nanoid } from 'nanoid';\nimport { NodeHelper } from 'src/app/helpers/node-helper';\nimport { IItem, ItemType } from 'src/app/interfaces/item.interface';\nimport { INode } from 'src/app/interfaces/node.interface';\nimport { ISpiritTree } from 'src/app/interfaces/spirit-tree.interface';\nimport { ISpirit, SpiritType } from 'src/app/interfaces/spirit.interface';\nimport { ITravelingSpirit } from 'src/app/interfaces/traveling-spirit.interface';\nimport { DataJsonService } from 'src/app/services/data-json.service';\nimport { DataService } from 'src/app/services/data.service';\n\ninterface IFormNode {\n  nw?: boolean;\n  n?: boolean;\n  ne?: boolean\n\n  item?: string;\n\n  c?: number;\n  h?: number;\n  ac?: number;\n}\n\n@Component({\n  selector: 'app-editor-traveling-spirit',\n  templateUrl: './editor-traveling-spirit.component.html',\n  styleUrls: ['./editor-traveling-spirit.component.less']\n})\nexport class EditorTravelingSpiritComponent {\n  tsCount: number;\n  spiritOptions = new Array<ISpirit>();\n  itemOptions = new Array<IItem>();\n\n  // Input\n  spirit?: string;\n  date?: string;\n\n  formNodes: Array<IFormNode>;\n\n  result?: ITravelingSpirit;\n\n  constructor(\n    private readonly dataService: DataService,\n    private readonly dataJsonService: DataJsonService\n  ) {\n      this.tsCount = dataService.travelingSpiritConfig.items.length;\n      this.spiritOptions = dataService.spiritConfig.items\n        .filter(s => s.type === 'Season')\n        .sort((a, b) => a.name.localeCompare(b.name));\n\n      const lastDate = dataService.travelingSpiritConfig.items.at(-1)?.date as Date;\n      this.date = moment(lastDate).add(2, 'weeks').isoWeekday(4).format('YYYY-MM-DD');\n\n      this.formNodes = [];\n      for (let i = 0; i < 24; i++) { this.formNodes.push({\n        n: !((i+2) % 3)\n      }); }\n  }\n\n  spiritChanged(): void {\n    this.formNodes.forEach(n => n.item = undefined);\n\n    this.itemOptions = [];\n\n    // Find last nodes\n    const lastTs = [...this.dataService.travelingSpiritConfig.items].reverse().find(s => s.spirit.guid === this.spirit);\n    const spiritTree = this.dataService.spiritConfig.items.find(s => s.guid === this.spirit)?.tree;\n\n    let existingNodes: Array<INode> = [];\n\n    if (lastTs) {\n      existingNodes = NodeHelper.all(lastTs.tree.node);\n      this.formNodes = this.nodeToFormNodes(lastTs.tree.node);\n    } else if (spiritTree) {\n      // Filter out season-specifics.\n      existingNodes = NodeHelper.all(spiritTree.node).filter(s => {\n        if (s.item?.name === 'Season Heart') { return false; }\n        return true;\n      });\n    }\n\n    // Add items\n    this.itemOptions.push({ guid: 'DON\\'T PICK', name: '-- SPIRIT ITEMS --', type: ItemType.Special });\n    this.itemOptions.push(...existingNodes.filter(n => n.item).map(n => n.item!));\n\n    // Create new items\n    this.itemOptions.push({ guid: 'DON\\'T PICK', name: '-- NEW ITEMS --', type: ItemType.Special });\n    this.itemOptions.push(this.createWingBuff());\n    this.itemOptions.push(this.createHeart());\n    this.itemOptions.push(this.createBlessing());\n    this.itemOptions.push(this.createBlessing());\n    this.itemOptions.push(this.createBlessing());\n    this.itemOptions.push(this.createBlessing());\n  }\n\n  toggleConnection(node: any, direction: string) {\n    node[direction] = !node[direction];\n  }\n\n  submit(): void {\n    const spirit = this.spiritOptions.find(s => s.guid == this.spirit);\n    const tsVisits = this.dataService.travelingSpiritConfig.items.filter(ts => ts.spirit.guid === this.spirit).length;\n\n    if (!spirit) { alert('No spirit'); return; }\n\n    const baseNode = this.formNodeToNodes();\n    const nodes = NodeHelper.all(baseNode);\n\n    // Create tree\n    const tree: ISpiritTree = {\n      guid: nanoid(10),\n      node: nodes[0]\n    };\n\n    // Create ts\n    const ts: ITravelingSpirit = {\n      guid: nanoid(10),\n      date: new Date(this.date!),\n      endDate: moment(this.date).add(4, 'days').toDate(),\n      spirit,\n      tree,\n      number: this.tsCount + 1,\n      visit: tsVisits + 1\n    };\n\n    console.log('ts generated', ts);\n\n    this.result = ts;\n  }\n\n  copyToClipboard(type: string): void {\n    let value = this.getForClipboard(type);\n    if (!value) { return; }\n    const startI = value.indexOf('{');\n    const endI = value.lastIndexOf('}');\n    value = value.substring(startI, endI + 1) + ',';\n    navigator.clipboard.writeText(value);\n  }\n\n  getForClipboard(type: string): string | undefined {\n    switch (type) {\n      case 'ts':\n        return this.dataJsonService.travelingSpiritsToJson([this.result!]);\n      case 'tree':\n        return this.dataJsonService.spiritTreesToJson([this.result!.tree]);\n      case 'nodes':\n        return this.dataJsonService.nodesToJson(NodeHelper.all(this.result!.tree.node));\n      case 'items': {\n        const nodes = NodeHelper.all(this.result!.tree.node);\n        const newItems = nodes\n          .filter(n => n.item?.guid && !this.dataService.guidMap.has(n.item.guid))\n          .map(n => n.item!);\n        return this.dataJsonService.itemsToJson(newItems);\n      }\n    }\n    return undefined;\n  }\n\n  getNextThursday(): Date {\n    const now = moment();\n\n    now.isoWeekday(4);\n    if (now.isoWeek() % 2 === 0) { now.add(7, 'days'); }\n\n    return now.toDate();\n  }\n\n  nodeToFormNodes(mainNode: INode): Array<IFormNode> {\n    const formNodes = new Array<IFormNode>();\n\n    for (let i = 0; i < 24; i++) {\n      formNodes.push({});\n    }\n\n    const defineNode = (i: number, node: INode) => {\n      formNodes[i] = {\n        item: node.item?.guid,\n        c: node.c,\n        h: node.h,\n        ac: node.ac,\n        n: !!node.n,\n        nw: !!node.nw,\n        ne: !!node.ne\n      };\n\n      if (node.nw) { defineNode(i - 1, node.nw); }\n      if (node.n) { defineNode(i - 3, node.n); }\n      if (node.ne) { defineNode(i + 1, node.ne); }\n    };\n\n    let i = 22;\n    defineNode(i, mainNode);\n\n    return formNodes;\n  }\n\n  formNodeToNodes(node?: INode, i = 22): INode {\n    const formNode = this.formNodes[i];\n    node ??= this.formNodeToNode(formNode)!;\n    if (!formNode) { return node; }\n\n    // Left (north-west)\n    if (formNode.nw) {\n      const j = i - 1;\n      const relativeNode = this.formNodeToNode(this.formNodes[j]);\n      if (relativeNode) {\n        node.nw = relativeNode;\n      }\n      this.formNodeToNodes(relativeNode, j);\n    }\n\n    // Top (north)\n    if (formNode.n) {\n      const j = i - 3;\n      const relativeNode = this.formNodeToNode(this.formNodes[j]);\n      if (relativeNode) {\n        node.n = relativeNode;\n      }\n      this.formNodeToNodes(relativeNode, j);\n    }\n\n    // Right (north-east)\n    if (formNode.ne) {\n      const j = i + 1;\n      const relativeNode = this.formNodeToNode(this.formNodes[j]);\n      if (relativeNode) {\n        node.ne = relativeNode;\n      }\n      this.formNodeToNodes(relativeNode, j);\n    }\n\n    return node;\n  }\n\n  formNodeToNode(formNode: IFormNode): INode | undefined {\n    if (!formNode?.item) { return undefined; }\n\n    return {\n      guid: nanoid(10),\n      item: this.itemOptions.find(i => i.guid === formNode.item),\n      c: formNode.c,\n      h: formNode.h,\n      ac: formNode.ac\n    };\n  }\n\n  createHeart(): IItem {\n    return {\n      guid: nanoid(10),\n      type: ItemType.Special,\n      name: 'Heart',\n      icon: 'https://static.wikia.nocookie.net/sky-children-of-the-light/images/d/d9/Heart.png'\n    }\n  }\n\n  createBlessing(): IItem {\n    return {\n      guid: nanoid(10),\n      type: ItemType.Special,\n      name: 'Blessing',\n      icon: 'https://static.wikia.nocookie.net/sky-children-of-the-light/images/8/8e/5CandlesSpell.png'\n    }\n  }\n\n  createWingBuff(): IItem {\n    return {\n      guid: nanoid(10),\n      type: ItemType.WingBuff,\n      name: 'Wing Buff',\n      icon: 'https://static.wikia.nocookie.net/sky-children-of-the-light/images/3/31/Winglight.png'\n    }\n  }\n}\n","<div>\n  There are currently {{ tsCount }} TS registered. Add #{{ tsCount + 1 }} now.\n</div>\n\n<div>\n  Spirit:\n  <select class=\"mono\" [(ngModel)]=\"spirit\" (ngModelChange)=\"spiritChanged()\">\n    <option *ngFor=\"let option of spiritOptions\" [value]=\"option.guid\">{{ option.name }}</option>\n  </select>\n</div>\n\n<div>\n  Date:\n  <input type=\"date\" [(ngModel)]=\"date\">\n</div>\n\n<div>\n  Nodes<br/>\n\n  <div class=\"grid-container\">\n    <div class=\"grid-item\" *ngFor=\"let node of formNodes; let i = index;\">\n      <div *ngIf=\"i%3===1\"\n        class=\"grid-item-connection grid-item-nw\" [class.green]=\"node.nw\"\n        (click)=\"toggleConnection(node, 'nw')\">NW</div>\n      <div class=\"grid-item-connection grid-item-n\" [class.green]=\"node.n\"\n        (click)=\"toggleConnection(node, 'n')\">N</div>\n      <div *ngIf=\"i%3===1\"\n        class=\"grid-item-connection grid-item-ne\" [class.green]=\"node.ne\"\n        (click)=\"toggleConnection(node, 'ne')\">NE</div>\n\n      <div>\n        <select class=\"mono\" [(ngModel)]=\"node.item\">\n          <option value=\"\"></option>\n          <option *ngFor=\"let option of itemOptions\" [value]=\"option.guid\">\n            {{ option.name }}\n            <span>\n              <ng-container *ngIf=\"option.level\">({{option.level}})</ng-container>\n            </span>\n            <span>({{ option.guid }})</span>\n          </option>\n        </select>\n      </div>\n\n      <div>\n        <mat-icon svgIcon=\"candle\"></mat-icon>\n        <input class=\"cost\" type=\"number\" [(ngModel)]=\"node.c\">\n        <mat-icon svgIcon=\"heart\"></mat-icon>\n        <input class=\"cost\" type=\"number\" [(ngModel)]=\"node.h\">\n        <mat-icon svgIcon=\"ascended-candle\"></mat-icon>\n        <input class=\"cost\" type=\"number\" [(ngModel)]=\"node.ac\">\n      </div>\n    </div>\n  </div>\n</div>\n\n<button type=\"button\" (click)=\"submit()\">Generate</button>\n\n<div *ngIf=\"result\">\n  <button type=\"button\" (click)=\"copyToClipboard('ts')\">\n    Copy TS\n  </button>\n  <button type=\"button\" (click)=\"copyToClipboard('tree')\">\n    Copy Tree\n  </button>\n  <button type=\"button\" (click)=\"copyToClipboard('nodes')\">\n    Copy Nodes\n  </button>\n  <button type=\"button\" (click)=\"copyToClipboard('items')\">\n    Copy Items\n  </button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport fuzzysort from 'fuzzysort';\nimport moment from 'moment';\nimport { nanoid } from 'nanoid';\nimport { NodeHelper } from 'src/app/helpers/node-helper';\nimport { IItem, ItemType } from 'src/app/interfaces/item.interface';\nimport { INode } from 'src/app/interfaces/node.interface';\nimport { ISpiritTree } from 'src/app/interfaces/spirit-tree.interface';\nimport { ISpirit, SpiritType } from 'src/app/interfaces/spirit.interface';\nimport { ITravelingSpirit } from 'src/app/interfaces/traveling-spirit.interface';\nimport { DataJsonService } from 'src/app/services/data-json.service';\nimport { DataService } from 'src/app/services/data.service';\n\ninterface IFormNode {\n  nw?: boolean;\n  n?: boolean;\n  ne?: boolean\n\n  item?: string;\n  itemRef?: IItem;\n\n  c?: number;\n  h?: number;\n  sc?: number;\n  sh?: number;\n  ac?: number;\n  ec?: number;\n}\n\n@Component({\n  selector: 'app-editor-tree-spirit',\n  templateUrl: './editor-tree.component.html',\n  styleUrls: ['./editor-tree.component.less']\n})\nexport class EditorTreeComponent implements OnInit {\n  itemOptions = new Array<IItem>();\n\n  formNodes: Array<IFormNode>;\n\n  result?: ISpiritTree;\n\n  constructor(\n    private readonly _dataService: DataService,\n    private readonly _dataJsonService: DataJsonService,\n    private readonly _route: ActivatedRoute\n  ) {\n      this.formNodes = [];\n      for (let i = 0; i < 24; i++) { this.formNodes.push({\n        n: !((i+2) % 3)\n      }); }\n  }\n\n  ngOnInit(): void {\n    this.formNodes.forEach(n => n.item = undefined);\n\n    const copyTree = this._route.snapshot.queryParams['copy'];\n    if (copyTree) {\n      const tree = this._dataService.guidMap.get(copyTree) as ISpiritTree;\n      this.formNodes = this.nodeToFormNodes(tree.node);\n    }\n\n    this.itemOptions = [];\n\n    // Add items\n    this.itemOptions.push(...this._dataService.itemConfig.items);\n\n    // Create new items\n    this.itemOptions.push({ guid: 'DON\\'T PICK', name: '-- NEW ITEMS --', type: ItemType.Special });\n    this.itemOptions.push(this.createWingBuff());\n    this.itemOptions.push(this.createHeart());\n    this.itemOptions.push(this.createBlessing());\n    this.itemOptions.push(this.createBlessing());\n    this.itemOptions.push(this.createBlessing());\n    this.itemOptions.push(this.createBlessing());\n  }\n\n  toggleConnection(node: any, direction: string) {\n    node[direction] = !node[direction];\n  }\n\n  itemInputChanged(event: Event, i: number): void {\n    const target = (event.target as HTMLInputElement);\n    const value = target?.value as string;\n    if (!value) { return; }\n\n    const jsonNode = this.getNodeFromJson(value);\n    if (jsonNode) {\n      this.formNodes[i] = jsonNode;\n      return;\n    }\n\n    const item = this._dataService.guidMap.get(value) as IItem;\n    if (!item) { return; }\n\n    this.formNodes[i].item = item.guid;\n    this.formNodes[i].itemRef = item;\n\n    target.value = '';\n    target.blur();\n  }\n\n  itemInputEnter(event: KeyboardEvent, i: number): void {\n    if (event.key !== 'Enter') { return; }  // Only handle enter key\n\n    const target = (event.target as HTMLInputElement);\n    const value = target?.value as string;\n    if (!value) { return; }\n    const results = fuzzysort.go(value, this.itemOptions, { key: 'name', limit: 1 });\n    const item = results?.[0].obj as IItem;\n    if (!item) { return; }\n\n    this.formNodes[i].item = item.guid;\n    this.formNodes[i].itemRef = item;\n\n    target.value = '';\n  }\n\n  submit(): void {\n    const baseNode = this.formNodeToNodes();\n    const nodes = NodeHelper.all(baseNode);\n\n    // Create tree\n    const tree: ISpiritTree = {\n      guid: nanoid(10),\n      node: nodes[0]\n    };\n\n    console.log('tree generated', tree);\n\n    this.result = tree;\n  }\n\n  copyToClipboard(type: string): void {\n    let value = this.getForClipboard(type);\n    if (!value) { return; }\n    const startI = value.indexOf('{');\n    const endI = value.lastIndexOf('}');\n    value = value.substring(startI, endI + 1) + ',';\n    navigator.clipboard.writeText(value);\n  }\n\n  getForClipboard(type: string): string | undefined {\n    switch (type) {\n      case 'tree':\n        return this._dataJsonService.spiritTreesToJson([this.result!]);\n      case 'nodes':\n        return this._dataJsonService.nodesToJson(NodeHelper.all(this.result!.node));\n      case 'items': {\n        const nodes = NodeHelper.all(this.result!.node);\n        const newItems = nodes\n          .filter(n => n.item?.guid && !this._dataService.guidMap.has(n.item.guid))\n          .map(n => n.item!);\n        return this._dataJsonService.itemsToJson(newItems);\n      }\n    }\n    return undefined;\n  }\n\n  nodeToFormNodes(mainNode: INode): Array<IFormNode> {\n    const formNodes = new Array<IFormNode>();\n\n    for (let i = 0; i < 24; i++) {\n      formNodes.push({});\n    }\n\n    const defineNode = (i: number, node: INode) => {\n      formNodes[i] = {\n        item: node.item?.guid,\n        itemRef: node.item,\n        c: node.c,\n        h: node.h,\n        ac: node.ac,\n        ec: node.ec,\n        sc: node.sc,\n        sh: node.sh,\n        n: !!node.n,\n        nw: !!node.nw,\n        ne: !!node.ne\n      };\n\n      if (node.nw) { defineNode(i - 1, node.nw); }\n      if (node.n) { defineNode(i - 3, node.n); }\n      if (node.ne) { defineNode(i + 1, node.ne); }\n    };\n\n    let i = 22;\n    defineNode(i, mainNode);\n\n    return formNodes;\n  }\n\n  copyNodeToClipboard(node: IFormNode): void {\n    const n = {...node};\n    delete n.itemRef;\n\n    navigator.clipboard.writeText(JSON.stringify(n));\n  }\n\n  getNodeFromJson(json: string): IFormNode | undefined {\n    try {\n      const node = JSON.parse(json) as IFormNode;\n      if (node.item) {\n        node.itemRef = this._dataService.guidMap.get(node.item) as IItem;\n      }\n\n      return node;\n    } catch { return undefined; }\n  }\n\n  formNodeToNodes(node?: INode, i = 22): INode {\n    const formNode = this.formNodes[i];\n    node ??= this.formNodeToNode(formNode)!;\n    if (!formNode) { return node; }\n\n    // Left (north-west)\n    if (formNode.nw) {\n      const j = i - 1;\n      const relativeNode = this.formNodeToNode(this.formNodes[j]);\n      if (relativeNode) {\n        node.nw = relativeNode;\n      }\n      this.formNodeToNodes(relativeNode, j);\n    }\n\n    // Top (north)\n    if (formNode.n) {\n      const j = i - 3;\n      const relativeNode = this.formNodeToNode(this.formNodes[j]);\n      if (relativeNode) {\n        node.n = relativeNode;\n      }\n      this.formNodeToNodes(relativeNode, j);\n    }\n\n    // Right (north-east)\n    if (formNode.ne) {\n      const j = i + 1;\n      const relativeNode = this.formNodeToNode(this.formNodes[j]);\n      if (relativeNode) {\n        node.ne = relativeNode;\n      }\n      this.formNodeToNodes(relativeNode, j);\n    }\n\n    return node;\n  }\n\n  formNodeToNode(formNode: IFormNode): INode | undefined {\n    if (!formNode?.item) { return undefined; }\n\n    return {\n      guid: nanoid(10),\n      item: this.itemOptions.find(i => i.guid === formNode.item),\n      c: formNode.c,\n      h: formNode.h,\n      ac: formNode.ac,\n      ec: formNode.ec,\n      sc: formNode.sc,\n      sh: formNode.sh\n    };\n  }\n\n  createHeart(): IItem {\n    return {\n      guid: nanoid(10),\n      type: ItemType.Special,\n      name: 'Heart',\n      icon: 'https://static.wikia.nocookie.net/sky-children-of-the-light/images/d/d9/Heart.png'\n    }\n  }\n\n  createBlessing(): IItem {\n    return {\n      guid: nanoid(10),\n      type: ItemType.Special,\n      name: 'Blessing',\n      icon: 'https://static.wikia.nocookie.net/sky-children-of-the-light/images/8/8e/5CandlesSpell.png'\n    }\n  }\n\n  createWingBuff(): IItem {\n    return {\n      guid: nanoid(10),\n      type: ItemType.WingBuff,\n      name: 'Wing Buff',\n      icon: 'https://static.wikia.nocookie.net/sky-children-of-the-light/images/3/31/Winglight.png'\n    }\n  }\n}\n","<div>\n  Nodes<br/>\n\n  <div class=\"grid-container\">\n    <div class=\"grid-item\" *ngFor=\"let node of formNodes; let i = index;\">\n      <div *ngIf=\"i%3===1\"\n        class=\"grid-item-connection grid-item-nw\" [class.green]=\"node.nw\"\n        (click)=\"toggleConnection(node, 'nw')\">NW</div>\n      <div class=\"grid-item-connection grid-item-n\" [class.green]=\"node.n\"\n        (click)=\"toggleConnection(node, 'n')\">N</div>\n      <div *ngIf=\"i%3===1\"\n        class=\"grid-item-connection grid-item-ne\" [class.green]=\"node.ne\"\n        (click)=\"toggleConnection(node, 'ne')\">NE</div>\n\n      <div>\n        <div class=\"d-inline-block\">{{node.itemRef?.name || ''}}&nbsp;</div>\n        <div class=\"d-inline-block \"><b *ngIf=\"node.item\" (click)=\"copyNodeToClipboard(node)\">{{node.item}}</b></div>\n\n        <input (input)=\"itemInputChanged($event, i)\" (keydown)=\"itemInputEnter($event, i)\">\n      </div>\n\n      <div class=\"mt-1\">\n        <mat-icon svgIcon=\"candle\"></mat-icon>\n        <input class=\"cost\" type=\"number\" [(ngModel)]=\"node.c\">\n        <mat-icon svgIcon=\"heart\"></mat-icon>\n        <input class=\"cost\" type=\"number\" [(ngModel)]=\"node.h\">\n        <mat-icon svgIcon=\"candle\" class=\"seasonal\"></mat-icon>\n        <input class=\"cost\" type=\"number\" [(ngModel)]=\"node.sc\">\n        <mat-icon svgIcon=\"heart\" class=\"seasonal\"></mat-icon>\n        <input class=\"cost\" type=\"number\" [(ngModel)]=\"node.sh\">\n        <mat-icon svgIcon=\"ascended-candle\"></mat-icon>\n        <input class=\"cost\" type=\"number\" [(ngModel)]=\"node.ac\">\n        <mat-icon svgIcon=\"ticket\" [inline]=\"false\"></mat-icon>\n        <input class=\"cost\" type=\"number\" [(ngModel)]=\"node.ec\">\n      </div>\n    </div>\n  </div>\n</div>\n\n<button type=\"button\" (click)=\"submit()\">Generate</button>\n\n<div *ngIf=\"result\">\n  <button type=\"button\" (click)=\"copyToClipboard('tree')\">\n    Copy Tree\n  </button>\n  <button type=\"button\" (click)=\"copyToClipboard('nodes')\">\n    Copy Nodes\n  </button>\n  <button type=\"button\" (click)=\"copyToClipboard('items')\">\n    Copy Items\n  </button>\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { EditorDashboardComponent } from './components/dashboard/editor-dashboard.component';\nimport { EditorTravelingSpiritComponent } from './components/editor-traveling-spirit/editor-traveling-spirit.component';\nimport { EditorTreeComponent } from './components/editor-tree/editor-tree.component';\nimport { EditorShopComponent } from './components/editor-shop/editor-shop.component';\nimport { EditorItemComponent } from './components/editor-item/editor-item.component';\n\nconst routes: Routes = [\n  { path: '', component: EditorDashboardComponent },\n  { path: 'ts', component: EditorTravelingSpiritComponent },\n  { path: 'tree', component: EditorTreeComponent },\n  { path: 'shop', component: EditorShopComponent },\n  { path: 'item', component: EditorItemComponent },\n];\n\n@NgModule({\n  declarations: [],\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class EditorRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { EditorDashboardComponent } from './components/dashboard/editor-dashboard.component';\nimport { EditorRoutingModule } from './editor-routing.module';\nimport { EditorTravelingSpiritComponent } from './components/editor-traveling-spirit/editor-traveling-spirit.component';\nimport { FormsModule } from '@angular/forms';\nimport { EditorTreeComponent } from './components/editor-tree/editor-tree.component';\nimport { EditorShopComponent } from './components/editor-shop/editor-shop.component';\nimport { EditorItemComponent } from './components/editor-item/editor-item.component';\nimport { MatIconModule } from '@angular/material/icon';\n\n@NgModule({\n  declarations: [\n    EditorDashboardComponent,\n    EditorTravelingSpiritComponent,\n    EditorTreeComponent,\n    EditorShopComponent,\n    EditorItemComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    MatIconModule,\n    EditorRoutingModule\n  ]\n})\nexport class EditorModule { }\n","import { Injectable } from '@angular/core';\nimport moment from 'moment';\nimport { IItem } from '../interfaces/item.interface';\nimport { INode } from '../interfaces/node.interface';\nimport { ISpiritTree } from '../interfaces/spirit-tree.interface';\nimport { ITravelingSpirit } from '../interfaces/traveling-spirit.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataJsonService {\n\n  constructor() { }\n\n  travelingSpiritsToJson(ts: Array<ITravelingSpirit>): string {\n    return this.stringify(ts.map(ts => {\n      const date = moment(ts.date);\n      return {\n        guid: ts.guid,\n        date: { day: date.date(), month: date.month() + 1, year: date.year() },\n        spirit: ts.spirit.guid,\n        tree: ts.tree.guid\n      };\n    }));\n  }\n\n  spiritTreesToJson(trees: Array<ISpiritTree>): string {\n    return this.stringify(trees.map(tree => {\n      return {\n        guid: tree.guid,\n        node: tree.node.guid\n      };\n    }));\n  }\n\n  nodesToJson(nodes: Array<INode>): string {\n    return this.stringify(nodes.map(node => {\n      return {\n        guid: node.guid,\n        item: node.item?.guid,\n        c: node.c,\n        h: node.h,\n        sc: node.sc,\n        sh: node.sh,\n        ac: node.ac,\n        nw: node.nw?.guid,\n        n: node.n?.guid,\n        ne: node.ne?.guid\n      };\n    }));\n  }\n\n  itemsToJson(items: Array<IItem>): string {\n    return this.stringify(items.map(item => {\n      return {\n        guid: item.guid,\n        type: item.type,\n        name: item.name,\n        icon: item.icon,\n        level: item.level\n      };\n    }));\n  }\n\n  private stringify(array: Array<unknown>): string {\n    return JSON.stringify(array, undefined, 2);\n  }\n}\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","export const urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\n"],"names":["EditorDashboardComponent","selectors","decls","vars","consts","template","i0","nanoid","EditorItemComponent","constructor","generate","icon","iRevision","indexOf","substring","item","guid","name","type","json","JSON","stringify","navigator","clipboard","writeText","ctx","EditorShopComponent","_dataService","shopGuidChanged","copyShopGuid","shop","guidMap","get","copyShop","submit","iaps","forEach","iap","push","price","returning","undefined","c","sc","sp","items","map","i","newShop","spirit","result","copyToClipboard","value","getForClipboard","startI","endI","lastIndexOf","moment","NodeHelper","ItemType","EditorTravelingSpiritComponent","dataService","dataJsonService","Array","tsCount","travelingSpiritConfig","length","spiritOptions","spiritConfig","filter","s","sort","a","b","localeCompare","lastDate","at","date","add","isoWeekday","format","formNodes","n","spiritChanged","itemOptions","lastTs","reverse","find","spiritTree","tree","existingNodes","all","node","nodeToFormNodes","Special","createWingBuff","createHeart","createBlessing","toggleConnection","direction","tsVisits","ts","alert","baseNode","formNodeToNodes","nodes","Date","endDate","toDate","number","visit","console","log","travelingSpiritsToJson","spiritTreesToJson","nodesToJson","newItems","has","itemsToJson","getNextThursday","now","isoWeek","mainNode","defineNode","h","ac","nw","ne","formNode","formNodeToNode","j","relativeNode","WingBuff","fuzzysort","EditorTreeComponent","_dataJsonService","_route","ngOnInit","copyTree","snapshot","queryParams","itemConfig","itemInputChanged","event","target","jsonNode","getNodeFromJson","itemRef","blur","itemInputEnter","key","results","go","limit","obj","ec","sh","copyNodeToClipboard","parse","RouterModule","routes","path","component","EditorRoutingModule","forChild","imports","exports","CommonModule","FormsModule","MatIconModule","EditorModule","declarations","DataJsonService","day","month","year","trees","level","array","factory","providedIn","urlAlphabet","random","bytes","crypto","getRandomValues","Uint8Array","customRandom","alphabet","defaultSize","getRandom","mask","Math","LN2","step","size","id","customAlphabet","reduce","byte","toString","toUpperCase"],"sourceRoot":"webpack:///","x_google_ignoreList":[13,14]}